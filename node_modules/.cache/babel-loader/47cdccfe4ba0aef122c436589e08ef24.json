{"ast":null,"code":"import _objectSpread from \"/home/abade/projects/instagram-web-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abade/projects/instagram-web-clone/src/components/Accounts/LoginPage.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm, useField } from 'react-final-form-hooks';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { logInAction } from '../../redux/actions/user';\nimport { ErrorText } from '../utils';\nimport { LoginWithFacebook, OR } from './utils';\nimport { Loader, useLoader } from '../utils';\nconst card = {\n  maxWidth: 348,\n  padding: '16px 40px',\n  marginBottom: 10\n};\nconst useSignUpStyles = makeStyles({\n  card: _objectSpread({}, card, {\n    display: 'grid',\n    alignItems: 'center',\n    gridTemplateColumns: '2fr 1fr'\n  }),\n  signUpButton: {\n    justifySelf: 'start'\n  }\n});\n\nfunction SignUp() {\n  const classes = useSignUpStyles();\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"right\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Don't have an account?\"), React.createElement(Link, {\n    to: \"/account/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    className: classes.signUpButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Sign up\")));\n}\n\nfunction ForgotPassword() {\n  return React.createElement(Link, {\n    to: \"/account/password/reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Forgot password?\")));\n}\n\nconst useLoginPageStyles = makeStyles({\n  card,\n  section: {\n    display: 'grid',\n    placeItems: 'center',\n    height: '100vh'\n  },\n  cardHeaderTitle: {\n    textAlign: 'center',\n    fontFamily: 'insta-font',\n    fontSize: 56,\n    letterSpacing: 1\n  },\n  textField: {\n    marginBottom: 6\n  },\n  button: {\n    margin: '8px 0px'\n  },\n  typography: {\n    margin: '10px 0px'\n  }\n});\n\nfunction LoginPage() {\n  const classes = useLoginPageStyles();\n  const dispatch = useDispatch();\n\n  const _useLoader = useLoader(),\n        loading = _useLoader.loading,\n        setLoading = _useLoader.setLoading,\n        formError = _useLoader.formError;\n\n  const validate = ({\n    userName,\n    password\n  }) => {\n    const errors = {};\n\n    if (!userName) {\n      errors.userName = 'Username is required.';\n    }\n\n    if (!password) {\n      errors.password = 'Password is required.';\n    }\n\n    return errors;\n  };\n\n  const onSubmit = values => {\n    dispatch(logInAction(values));\n    setLoading(true);\n  };\n\n  const _useForm = useForm({\n    onSubmit,\n    validate\n  }),\n        form = _useForm.form,\n        handleSubmit = _useForm.handleSubmit,\n        submitting = _useForm.submitting,\n        submitFailed = _useForm.submitFailed,\n        errors = _useForm.errors;\n\n  const userName = useField('userName', form);\n  const password = useField('password', form);\n  const cardHeaderProps = {\n    title: 'Instaclone',\n    classes: {\n      title: classes.cardHeaderTitle\n    }\n  };\n\n  const nameProps = _objectSpread({}, userName.input, {\n    error: userName.meta.error && userName.meta.submitFailed,\n    fullWidth: true,\n    variant: 'filled',\n    label: 'Username',\n    className: classes.textField,\n    autoComplete: 'username'\n  });\n\n  const passwordProps = _objectSpread({}, password.input, {\n    error: password.meta.error && password.meta.submitFailed,\n    fullWidth: true,\n    variant: 'filled',\n    label: 'Password',\n    type: 'password',\n    className: classes.textField,\n    autoComplete: 'current-password'\n  });\n\n  const buttonProps = {\n    disabled: userName.meta.pristine || password.meta.pristine || submitting || loading,\n    variant: 'contained',\n    fullWidth: true,\n    color: 'primary',\n    className: classes.button,\n    type: 'submit'\n  };\n  return React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(CardHeader, Object.assign({}, cardHeaderProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({}, nameProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({}, passwordProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })), React.createElement(Button, Object.assign({}, buttonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), loading && React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), \"Log In\")), React.createElement(OR, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(LoginWithFacebook, {\n    color: \"secondary\",\n    iconColor: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), submitFailed && React.createElement(ErrorText, {\n    text: Object.values(errors)[0],\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), formError && React.createElement(ErrorText, {\n    text: formError,\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(ForgotPassword, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })), React.createElement(SignUp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/abade/projects/instagram-web-clone/src/components/Accounts/LoginPage.js"],"names":["React","Link","useForm","useField","useDispatch","Button","Card","CardHeader","TextField","Typography","makeStyles","logInAction","ErrorText","LoginWithFacebook","OR","Loader","useLoader","card","maxWidth","padding","marginBottom","useSignUpStyles","display","alignItems","gridTemplateColumns","signUpButton","justifySelf","SignUp","classes","ForgotPassword","useLoginPageStyles","section","placeItems","height","cardHeaderTitle","textAlign","fontFamily","fontSize","letterSpacing","textField","button","margin","typography","LoginPage","dispatch","loading","setLoading","formError","validate","userName","password","errors","onSubmit","values","form","handleSubmit","submitting","submitFailed","cardHeaderProps","title","nameProps","input","error","meta","fullWidth","variant","label","className","autoComplete","passwordProps","type","buttonProps","disabled","pristine","color","Object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm, useField } from 'react-final-form-hooks';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { logInAction } from '../../redux/actions/user';\n\nimport { ErrorText } from '../utils';\nimport { LoginWithFacebook, OR } from './utils';\nimport { Loader, useLoader } from '../utils';\n\nconst card = {\n  maxWidth: 348,\n  padding: '16px 40px',\n  marginBottom: 10\n};\n\nconst useSignUpStyles = makeStyles({\n  card: {\n    ...card,\n    display: 'grid',\n    alignItems: 'center',\n    gridTemplateColumns: '2fr 1fr'\n  },\n\n  signUpButton: {\n    justifySelf: 'start'\n  }\n});\n\nfunction SignUp() {\n  const classes = useSignUpStyles();\n\n  return (\n    <Card className={classes.card}>\n      <Typography align=\"right\" variant=\"body2\">\n        {\"Don't have an account?\"}\n      </Typography>\n      <Link to=\"/account/signup\">\n        <Button color=\"primary\" className={classes.signUpButton}>\n          Sign up\n        </Button>\n      </Link>\n    </Card>\n  );\n}\n\nfunction ForgotPassword() {\n  return (\n    <Link to=\"/account/password/reset\">\n      <Button fullWidth color=\"secondary\">\n        <Typography variant=\"caption\">Forgot password?</Typography>\n      </Button>\n    </Link>\n  );\n}\n\nconst useLoginPageStyles = makeStyles({\n  card,\n\n  section: {\n    display: 'grid',\n    placeItems: 'center',\n    height: '100vh'\n  },\n\n  cardHeaderTitle: {\n    textAlign: 'center',\n    fontFamily: 'insta-font',\n    fontSize: 56,\n    letterSpacing: 1\n  },\n\n  textField: {\n    marginBottom: 6\n  },\n\n  button: {\n    margin: '8px 0px'\n  },\n\n  typography: {\n    margin: '10px 0px'\n  }\n});\n\nfunction LoginPage() {\n  const classes = useLoginPageStyles();\n  const dispatch = useDispatch();\n  const { loading, setLoading, formError } = useLoader();\n\n  const validate = ({ userName, password }) => {\n    const errors = {};\n    if (!userName) {\n      errors.userName = 'Username is required.';\n    }\n    if (!password) {\n      errors.password = 'Password is required.';\n    }\n\n    return errors;\n  };\n  const onSubmit = values => {\n    dispatch(logInAction(values));\n    setLoading(true);\n  };\n\n  const { form, handleSubmit, submitting, submitFailed, errors } = useForm({\n    onSubmit,\n    validate\n  });\n\n  const userName = useField('userName', form);\n  const password = useField('password', form);\n\n  const cardHeaderProps = {\n    title: 'Instaclone',\n    classes: {\n      title: classes.cardHeaderTitle\n    }\n  };\n  const nameProps = {\n    ...userName.input,\n    error: userName.meta.error && userName.meta.submitFailed,\n    fullWidth: true,\n    variant: 'filled',\n    label: 'Username',\n    className: classes.textField,\n    autoComplete: 'username'\n  };\n  const passwordProps = {\n    ...password.input,\n    error: password.meta.error && password.meta.submitFailed,\n    fullWidth: true,\n    variant: 'filled',\n    label: 'Password',\n    type: 'password',\n    className: classes.textField,\n    autoComplete: 'current-password'\n  };\n  const buttonProps = {\n    disabled:\n      userName.meta.pristine || password.meta.pristine || submitting || loading,\n    variant: 'contained',\n    fullWidth: true,\n    color: 'primary',\n    className: classes.button,\n    type: 'submit'\n  };\n\n  return (\n    <section className={classes.section}>\n      <article>\n        <Card className={classes.card}>\n          <CardHeader {...cardHeaderProps} />\n          <form onSubmit={handleSubmit}>\n            <TextField {...nameProps} />\n            <TextField {...passwordProps} />\n            <Button {...buttonProps}>\n              {loading && <Loader />}\n              Log In\n            </Button>\n          </form>\n          <OR />\n          <LoginWithFacebook color=\"secondary\" iconColor=\"blue\" />\n          {submitFailed && (\n            <ErrorText\n              text={Object.values(errors)[0]}\n              className={classes.typography}\n            />\n          )}\n          {formError && (\n            <ErrorText text={formError} className={classes.typography} />\n          )}\n          <ForgotPassword />\n        </Card>\n        <SignUp />\n      </article>\n    </section>\n  );\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}