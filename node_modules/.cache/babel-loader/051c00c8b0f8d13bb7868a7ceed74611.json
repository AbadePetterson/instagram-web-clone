{"ast":null,"code":"import _objectSpread from \"/home/abade/projects/instagram-web-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abade/projects/instagram-web-clone/src/components/Feed/index.js\";\nimport React, { useEffect, lazy, Suspense, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { userActions, getUserProfileAction } from '../../redux/actions/api';\nimport LoadingPage from '../LoadingPage';\nimport ErrorPage from '../ErrorPage';\nimport { generateKey } from '../utils';\nconst TopNavigation = lazy(() => import('../TopNavigation'));\nconst EditProfilePage = lazy(() => import('../Profile/EditProfilePage'));\nconst Feed = lazy(() => import('./Feed'));\nconst ProfilePage = lazy(() => import('../Profile/ProfilePage'));\nconst useStyles = makeStyles(theme => {\n  const containerLarge = {\n    margin: '130px 0px 50px',\n    display: 'grid',\n    gridTemplateColumns: 'minmax(auto, 935px)',\n    justifyContent: 'center'\n  };\n  return {\n    container: {\n      [theme.breakpoints.up('sm')]: _objectSpread({}, containerLarge),\n      [theme.breakpoints.down('xs')]: _objectSpread({}, containerLarge, {\n        marginTop: 100\n      })\n    }\n  };\n});\nexport default function AuthenticatedRoutes() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.api.user);\n\n  const _JSON$parse = JSON.parse(localStorage.getItem('instaInfo')),\n        userId = _JSON$parse.userId,\n        userName = _JSON$parse.userName;\n\n  useEffect(() => {\n    dispatch(userActions.get(userId));\n  }, [dispatch, userId]);\n\n  const withProps = Component => props => user ? React.createElement(Component, Object.assign({\n    user: user,\n    isOwner: true\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })) : React.createElement(LoadingPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  });\n\n  return React.createElement(Suspense, {\n    fallback: React.createElement(LoadingPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TopNavigation, {\n    userName: userName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Feed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/accounts/edit\",\n    component: withProps(EditProfilePage),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/accounts/change-password\",\n    component: withProps(EditProfilePage),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\".concat(userName),\n    component: withProps(ProfilePage),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/:userName\",\n    component: CheckForInstaUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Route, {\n    component: ErrorPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))));\n}\n\nfunction CheckForInstaUser(props) {\n  const dispatch = useDispatch();\n  const userProfile = useSelector(({\n    api\n  }) => api.userProfile);\n  const userName = props.match.params.userName;\n\n  const _useRef = useRef(generateKey()),\n        key = _useRef.current;\n\n  useEffect(() => {\n    dispatch(getUserProfileAction({\n      params: userName,\n      key\n    }));\n  }, [dispatch, key, userName]);\n\n  if (userProfile.namespace === 'profile') {\n    const profilePageProps = _objectSpread({}, props, {\n      user: userProfile.data,\n      isOwner: false\n    });\n\n    return React.createElement(ProfilePage, Object.assign({}, profilePageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n  switch (userProfile.key === key && userProfile && userProfile.status) {\n    case 'failed':\n      return React.createElement(ErrorPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n\n    case 'ok':\n      const profilePageProps = _objectSpread({}, props, {\n        user: userProfile.data,\n        isOwner: false\n      });\n\n      return React.createElement(ProfilePage, Object.assign({}, profilePageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n\n    default:\n      return React.createElement(LoadingPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      });\n  }\n}","map":{"version":3,"sources":["/home/abade/projects/instagram-web-clone/src/components/Feed/index.js"],"names":["React","useEffect","lazy","Suspense","useRef","useDispatch","useSelector","Route","Switch","makeStyles","userActions","getUserProfileAction","LoadingPage","ErrorPage","generateKey","TopNavigation","EditProfilePage","Feed","ProfilePage","useStyles","theme","containerLarge","margin","display","gridTemplateColumns","justifyContent","container","breakpoints","up","down","marginTop","AuthenticatedRoutes","classes","dispatch","user","state","api","JSON","parse","localStorage","getItem","userId","userName","get","withProps","Component","props","CheckForInstaUser","userProfile","match","params","key","current","namespace","profilePageProps","data","isOwner","status"],"mappings":"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","sourcesContent":["import React, { useEffect, lazy, Suspense, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { userActions, getUserProfileAction } from '../../redux/actions/api';\n\nimport LoadingPage from '../LoadingPage';\nimport ErrorPage from '../ErrorPage';\n\nimport { generateKey } from '../utils';\n\nconst TopNavigation = lazy(() => import('../TopNavigation'));\nconst EditProfilePage = lazy(() => import('../Profile/EditProfilePage'));\nconst Feed = lazy(() => import('./Feed'));\nconst ProfilePage = lazy(() => import('../Profile/ProfilePage'));\n\nconst useStyles = makeStyles(theme => {\n  const containerLarge = {\n    margin: '130px 0px 50px',\n    display: 'grid',\n    gridTemplateColumns: 'minmax(auto, 935px)',\n    justifyContent: 'center'\n  };\n\n  return {\n    container: {\n      [theme.breakpoints.up('sm')]: {\n        ...containerLarge\n      },\n      [theme.breakpoints.down('xs')]: {\n        ...containerLarge,\n        marginTop: 100\n      }\n    }\n  };\n});\n\nexport default function AuthenticatedRoutes() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.api.user);\n  const { userId, userName } = JSON.parse(localStorage.getItem('instaInfo'));\n\n  useEffect(() => {\n    dispatch(userActions.get(userId));\n  }, [dispatch, userId]);\n\n  const withProps = Component => props =>\n    user ? (\n      <Component user={user} isOwner={true} {...props} />\n    ) : (\n      <LoadingPage />\n    );\n\n  return (\n    <Suspense fallback={<LoadingPage />}>\n      <TopNavigation userName={userName} />\n      <section className={classes.container}>\n        <Switch>\n          <Route exact path=\"/\" component={Feed} />\n          <Route\n            exact\n            path=\"/accounts/edit\"\n            component={withProps(EditProfilePage)}\n          />\n          <Route\n            exact\n            path=\"/accounts/change-password\"\n            component={withProps(EditProfilePage)}\n          />\n          <Route\n            exact\n            path={`/${userName}`}\n            component={withProps(ProfilePage)}\n          />\n          <Route exact path=\"/:userName\" component={CheckForInstaUser} />\n          <Route component={ErrorPage} />\n        </Switch>\n      </section>\n    </Suspense>\n  );\n}\n\nfunction CheckForInstaUser(props) {\n  const dispatch = useDispatch();\n  const userProfile = useSelector(({ api }) => api.userProfile);\n  const {\n    match: {\n      params: { userName }\n    }\n  } = props;\n  const { current: key } = useRef(generateKey());\n\n  useEffect(() => {\n    dispatch(getUserProfileAction({ params: userName, key }));\n  }, [dispatch, key, userName]);\n\n  if (userProfile.namespace === 'profile') {\n    const profilePageProps = {\n      ...props,\n      user: userProfile.data,\n      isOwner: false\n    };\n    return <ProfilePage {...profilePageProps} />;\n  }\n\n  switch (userProfile.key === key && userProfile && userProfile.status) {\n    case 'failed':\n      return <ErrorPage />;\n\n    case 'ok':\n      const profilePageProps = {\n        ...props,\n        user: userProfile.data,\n        isOwner: false\n      };\n      return <ProfilePage {...profilePageProps} />;\n\n    default:\n      return <LoadingPage />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}