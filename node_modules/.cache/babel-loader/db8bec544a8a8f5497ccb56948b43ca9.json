{"ast":null,"code":"var _jsxFileName = \"/home/abade/projects/instagram-web-clone/src/components/utils/skeleton.js\";\nimport React from 'react';\nimport cx from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImagePlaceHolder from '../../images/image-placeholder.jpg';\nconst useSkeletonStyles = makeStyles({\n  card: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'minmax(auto, 600px)',\n    gridGap: 10,\n    alignItems: 'center',\n    padding: '8px 16px'\n  },\n  wrapper: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: '44px auto',\n    gridGap: 12,\n    alignItems: 'center'\n  },\n  avatar: {\n    width: 44,\n    height: 44,\n    background: '#e8e8e8',\n    borderRadius: '50%'\n  },\n  text: {\n    margin: '4px 0',\n    height: 8,\n    maxWidth: 120,\n    background: '#e8e8e8',\n    borderRadius: 6\n  },\n  button: {\n    height: 30,\n    width: 74,\n    background: '#e8e8e8',\n    borderRadius: 2\n  }\n});\nexport function SuggestionsSkeleton({\n  count,\n  classNames = {}\n}) {\n  const classes = useSkeletonStyles();\n\n  const card = key => React.createElement(\"div\", {\n    className: cx(classes.card, classNames.card),\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: cx(classes.avatar, classNames.avatar),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: cx(classes.text, classNames.text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: cx(classes.text, classNames.text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: cx(classes.button, classNames.button),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n\n  return times(count, card);\n}\nconst useProfilePostsSkeletonStyles = makeStyles({\n  img: {\n    width: '100%'\n  }\n});\nexport function ProfilePostsSkeleton({\n  count\n}) {\n  const classes = useProfilePostsSkeletonStyles();\n\n  const image = key => React.createElement(\"img\", {\n    key: key,\n    src: ImagePlaceHolder,\n    alt: \"profile pic placeholder\",\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  });\n\n  return times(count, image);\n}\nconst useAllPostsSkeletonStyles = makeStyles(theme => ({\n  card: {\n    background: '#ffffff'\n  },\n  button: {\n    height: 10,\n    width: 37\n  },\n  avatar: {\n    width: 32,\n    height: 32\n  },\n  text: {\n    margin: '4px 0',\n    height: 4,\n    width: 120,\n    borderRadius: 'none'\n  },\n  article: {\n    border: '1px solid #e6e6e6',\n    background: '#EEEEEE',\n    marginBottom: 60,\n    [theme.breakpoints.down('xs')]: {\n      border: 'unset',\n      marginBottom: 16\n    }\n  }\n}));\nexport function AllPostsSkeleton({\n  count\n}) {\n  const classes = useAllPostsSkeletonStyles();\n  const suggestionsSkeletonProps = {\n    count: 1,\n    classNames: {\n      avatar: classes.avatar,\n      text: classes.text,\n      button: classes.button,\n      card: classes.card\n    }\n  };\n\n  const card = key => React.createElement(\"article\", {\n    key: key,\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(SuggestionsSkeleton, Object.assign({}, suggestionsSkeletonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(ProfilePostsSkeleton, {\n    count: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }));\n\n  return times(count, card);\n}\n\nfunction times(count, cb, list = []) {\n  return count === 0 ? list : times(--count, cb, [...list, cb(count)]);\n}","map":{"version":3,"sources":["/home/abade/projects/instagram-web-clone/src/components/utils/skeleton.js"],"names":["React","cx","makeStyles","ImagePlaceHolder","useSkeletonStyles","card","display","gridAutoFlow","gridTemplateColumns","gridGap","alignItems","padding","wrapper","avatar","width","height","background","borderRadius","text","margin","maxWidth","button","SuggestionsSkeleton","count","classNames","classes","key","times","useProfilePostsSkeletonStyles","img","ProfilePostsSkeleton","image","useAllPostsSkeletonStyles","theme","article","border","marginBottom","breakpoints","down","AllPostsSkeleton","suggestionsSkeletonProps","cb","list"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ImagePlaceHolder from '../../images/image-placeholder.jpg';\n\nconst useSkeletonStyles = makeStyles({\n  card: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'minmax(auto, 600px)',\n    gridGap: 10,\n    alignItems: 'center',\n    padding: '8px 16px'\n  },\n  wrapper: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: '44px auto',\n    gridGap: 12,\n    alignItems: 'center'\n  },\n  avatar: {\n    width: 44,\n    height: 44,\n    background: '#e8e8e8',\n    borderRadius: '50%'\n  },\n  text: {\n    margin: '4px 0',\n    height: 8,\n    maxWidth: 120,\n    background: '#e8e8e8',\n    borderRadius: 6\n  },\n  button: {\n    height: 30,\n    width: 74,\n    background: '#e8e8e8',\n    borderRadius: 2\n  }\n});\n\nexport function SuggestionsSkeleton({ count, classNames = {} }) {\n  const classes = useSkeletonStyles();\n\n  const card = key => (\n    <div className={cx(classes.card, classNames.card)} key={key}>\n      <div className={classes.wrapper}>\n        <div className={cx(classes.avatar, classNames.avatar)} />\n        <div>\n          <div className={cx(classes.text, classNames.text)} />\n          <div className={cx(classes.text, classNames.text)} />\n        </div>\n      </div>\n      <div className={cx(classes.button, classNames.button)} />\n    </div>\n  );\n\n  return times(count, card);\n}\n\nconst useProfilePostsSkeletonStyles = makeStyles({\n  img: {\n    width: '100%'\n  }\n});\n\nexport function ProfilePostsSkeleton({ count }) {\n  const classes = useProfilePostsSkeletonStyles();\n  const image = key => (\n    <img\n      key={key}\n      src={ImagePlaceHolder}\n      alt=\"profile pic placeholder\"\n      className={classes.img}\n    />\n  );\n  return times(count, image);\n}\n\nconst useAllPostsSkeletonStyles = makeStyles(theme => ({\n  card: {\n    background: '#ffffff'\n  },\n  button: {\n    height: 10,\n    width: 37\n  },\n  avatar: {\n    width: 32,\n    height: 32\n  },\n  text: {\n    margin: '4px 0',\n    height: 4,\n    width: 120,\n    borderRadius: 'none'\n  },\n\n  article: {\n    border: '1px solid #e6e6e6',\n    background: '#EEEEEE',\n    marginBottom: 60,\n    [theme.breakpoints.down('xs')]: {\n      border: 'unset',\n      marginBottom: 16\n    }\n  }\n}));\n\nexport function AllPostsSkeleton({ count }) {\n  const classes = useAllPostsSkeletonStyles();\n\n  const suggestionsSkeletonProps = {\n    count: 1,\n    classNames: {\n      avatar: classes.avatar,\n      text: classes.text,\n      button: classes.button,\n      card: classes.card\n    }\n  };\n\n  const card = key => (\n    <article key={key} className={classes.article}>\n      <SuggestionsSkeleton {...suggestionsSkeletonProps} />\n      <ProfilePostsSkeleton count={1} />\n    </article>\n  );\n\n  return times(count, card);\n}\n\nfunction times(count, cb, list = []) {\n  return count === 0 ? list : times(--count, cb, [...list, cb(count)]);\n}\n"]},"metadata":{},"sourceType":"module"}