{"ast":null,"code":"var _jsxFileName = \"/home/abade/projects/instagram-web-clone/src/components/Profile/utils.js\";\nimport React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Zoom from '@material-ui/core/Zoom';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { changeProfilePicAction } from '../../redux/actions/api';\nimport { Loader } from '../utils';\nconst padding = '12px 8px';\nconst useChangeProfilePicDialogStyles = makeStyles(theme => ({\n  errorButton: {\n    color: theme.palette.error.main,\n    padding\n  },\n  button: {\n    padding\n  },\n  dialogScrollPaper: {\n    display: 'grid',\n    gridTemplateColumns: 'minmax(auto, 480px)'\n  },\n  dialogPaper: {\n    borderRadius: 12\n  },\n  dialogTitle: {\n    textAlign: 'center'\n  }\n}));\nexport function ChangeProfilePicDialog({\n  id,\n  onClose,\n  setLoading,\n  inputRef\n}) {\n  const classes = useChangeProfilePicDialogStyles();\n  const dispatch = useDispatch();\n\n  const handleRemovePicClick = () => {\n    dispatch(changeProfilePicAction({\n      params: id\n    }));\n    setLoading(true);\n    onClose();\n  };\n\n  const dialogProps = {\n    open: true,\n    classes: {\n      scrollPaper: classes.dialogScrollPaper,\n      paper: classes.dialogPaper\n    },\n    onClose,\n    TransitionComponent: Zoom\n  };\n  const buttonProps = {\n    color: 'primary',\n    className: classes.button,\n    onClick: () => {\n      inputRef.current.click();\n      onClose();\n    }\n  };\n  return React.createElement(Dialog, Object.assign({}, dialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(DialogTitle, {\n    className: classes.dialogTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Change Profile Photo\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Button, Object.assign({}, buttonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), \"Upload Photo\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.errorButton,\n    onClick: handleRemovePicClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Remove Current Photo\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Cancel\"));\n}\nconst useProfilePictureStyles = makeStyles({\n  person: {\n    color: '#ffffff',\n    height: ({\n      size = 150\n    }) => size,\n    width: ({\n      size = 150\n    }) => size\n  },\n  personWrapper: {\n    background: '#DBDBDB',\n    width: ({\n      size = 150\n    }) => size,\n    height: ({\n      size = 150\n    }) => size,\n    borderRadius: '50%',\n    display: 'grid',\n    position: 'relative',\n    placeItems: 'center',\n    '&:hover': {\n      cursor: ({\n        isOwner\n      }) => isOwner ? 'pointer' : 'default'\n    }\n  },\n  personSection: {\n    display: 'grid',\n    justifyContent: 'center'\n  },\n  img: {\n    height: ({\n      size = 150\n    }) => size,\n    width: ({\n      size = 150\n    }) => size,\n    borderRadius: '50%'\n  }\n});\nexport function ProfilePicture({\n  size,\n  user: {\n    id,\n    profileImageUrl: image\n  },\n  onImageClick,\n  loading,\n  setLoading,\n  inputRef,\n  isOwner\n}) {\n  const classes = useProfilePictureStyles({\n    size,\n    isOwner\n  });\n  const dispatch = useDispatch();\n  const buttonRef = useRef();\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const payload = new FormData(event.target);\n    dispatch(changeProfilePicAction({\n      params: id,\n      payload\n    }));\n    setLoading(true);\n  };\n\n  const inputProps = {\n    ref: inputRef,\n    onChange: () => buttonRef.current.click(),\n    type: 'file',\n    accept: 'image/jpeg, image/png',\n    hidden: true,\n    name: 'profilePic'\n  };\n  const imgProps = {\n    src: image,\n    className: classes.img,\n    onClick: !loading ? onImageClick : undefined\n  };\n  return React.createElement(\"section\", {\n    className: classes.personSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, image ? React.createElement(\"div\", {\n    className: classes.personWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, loading && React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(\"img\", Object.assign({}, imgProps, {\n    alt: \"profilePic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    className: classes.personWrapper,\n    onClick: !loading ? () => inputRef.current.click() : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, loading && React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(PersonIcon, {\n    className: classes.person,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, inputProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    ref: buttonRef,\n    type: \"submit\",\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/abade/projects/instagram-web-clone/src/components/Profile/utils.js"],"names":["React","useRef","useDispatch","Button","Dialog","DialogTitle","Divider","Zoom","PersonIcon","makeStyles","changeProfilePicAction","Loader","padding","useChangeProfilePicDialogStyles","theme","errorButton","color","palette","error","main","button","dialogScrollPaper","display","gridTemplateColumns","dialogPaper","borderRadius","dialogTitle","textAlign","ChangeProfilePicDialog","id","onClose","setLoading","inputRef","classes","dispatch","handleRemovePicClick","params","dialogProps","open","scrollPaper","paper","TransitionComponent","buttonProps","className","onClick","current","click","useProfilePictureStyles","person","height","size","width","personWrapper","background","position","placeItems","cursor","isOwner","personSection","justifyContent","img","ProfilePicture","user","profileImageUrl","image","onImageClick","loading","buttonRef","onSubmit","event","preventDefault","payload","FormData","target","inputProps","ref","onChange","type","accept","hidden","name","imgProps","src","undefined"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { changeProfilePicAction } from '../../redux/actions/api';\n\nimport { Loader } from '../utils';\n\nconst padding = '12px 8px';\nconst useChangeProfilePicDialogStyles = makeStyles(theme => ({\n  errorButton: {\n    color: theme.palette.error.main,\n    padding\n  },\n  button: {\n    padding\n  },\n\n  dialogScrollPaper: {\n    display: 'grid',\n    gridTemplateColumns: 'minmax(auto, 480px)'\n  },\n  dialogPaper: {\n    borderRadius: 12\n  },\n  dialogTitle: {\n    textAlign: 'center'\n  }\n}));\n\nexport function ChangeProfilePicDialog({ id, onClose, setLoading, inputRef }) {\n  const classes = useChangeProfilePicDialogStyles();\n  const dispatch = useDispatch();\n\n  const handleRemovePicClick = () => {\n    dispatch(changeProfilePicAction({ params: id }));\n    setLoading(true);\n    onClose();\n  };\n\n  const dialogProps = {\n    open: true,\n    classes: {\n      scrollPaper: classes.dialogScrollPaper,\n      paper: classes.dialogPaper\n    },\n    onClose,\n    TransitionComponent: Zoom\n  };\n  const buttonProps = {\n    color: 'primary',\n    className: classes.button,\n    onClick: () => {\n      inputRef.current.click();\n      onClose();\n    }\n  };\n\n  return (\n    <Dialog {...dialogProps}>\n      <DialogTitle className={classes.dialogTitle}>\n        Change Profile Photo\n      </DialogTitle>\n      <Divider />\n      <Button {...buttonProps}>Upload Photo</Button>\n      <Divider />\n      <Button className={classes.errorButton} onClick={handleRemovePicClick}>\n        Remove Current Photo\n      </Button>\n      <Divider />\n      <Button className={classes.button} onClick={onClose}>\n        Cancel\n      </Button>\n    </Dialog>\n  );\n}\n\nconst useProfilePictureStyles = makeStyles({\n  person: {\n    color: '#ffffff',\n    height: ({ size = 150 }) => size,\n    width: ({ size = 150 }) => size\n  },\n  personWrapper: {\n    background: '#DBDBDB',\n    width: ({ size = 150 }) => size,\n    height: ({ size = 150 }) => size,\n    borderRadius: '50%',\n    display: 'grid',\n    position: 'relative',\n    placeItems: 'center',\n    '&:hover': {\n      cursor: ({ isOwner }) => (isOwner ? 'pointer' : 'default')\n    }\n  },\n  personSection: {\n    display: 'grid',\n    justifyContent: 'center'\n  },\n\n  img: {\n    height: ({ size = 150 }) => size,\n    width: ({ size = 150 }) => size,\n    borderRadius: '50%'\n  }\n});\n\nexport function ProfilePicture({\n  size,\n  user: { id, profileImageUrl: image },\n  onImageClick,\n  loading,\n  setLoading,\n  inputRef,\n  isOwner\n}) {\n  const classes = useProfilePictureStyles({ size, isOwner });\n  const dispatch = useDispatch();\n  const buttonRef = useRef();\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const payload = new FormData(event.target);\n    dispatch(changeProfilePicAction({ params: id, payload }));\n    setLoading(true);\n  };\n\n  const inputProps = {\n    ref: inputRef,\n    onChange: () => buttonRef.current.click(),\n    type: 'file',\n    accept: 'image/jpeg, image/png',\n    hidden: true,\n    name: 'profilePic'\n  };\n  const imgProps = {\n    src: image,\n    className: classes.img,\n    onClick: !loading ? onImageClick : undefined\n  };\n\n  return (\n    <section className={classes.personSection}>\n      {image ? (\n        <div className={classes.personWrapper}>\n          {loading && <Loader />}\n          <img {...imgProps} alt=\"profilePic\" />\n        </div>\n      ) : (\n        <div\n          className={classes.personWrapper}\n          onClick={!loading ? () => inputRef.current.click() : undefined}\n        >\n          {loading && <Loader />}\n          <PersonIcon className={classes.person} />\n        </div>\n      )}\n      <form encType=\"multipart/form-data\" onSubmit={onSubmit}>\n        <input {...inputProps} />\n        <button ref={buttonRef} type=\"submit\" hidden />\n      </form>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}