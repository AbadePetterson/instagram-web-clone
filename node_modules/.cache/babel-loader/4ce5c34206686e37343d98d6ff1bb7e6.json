{"ast":null,"code":"import _slicedToArray from \"/home/abade/projects/instagram-web-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/abade/projects/instagram-web-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abade/projects/instagram-web-clone/src/components/Profile/EditProfilePage.js\";\nimport React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm, useField } from 'react-final-form-hooks';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { userActions } from '../../redux/actions/api';\nimport { ProfilePicture, ChangeProfilePicDialog } from './utils';\nimport { ErrorText, Loader, useLoader } from '../utils';\nconst sectionItem = {\n  display: 'grid',\n  gridAutoFlow: 'column',\n  gridGap: 30,\n  placeItems: 'start end',\n  marginBottom: 16,\n  gridTemplateColumns: 'minmax(auto, 150px) minmax(auto, 340px)'\n};\nconst typography = {\n  fontWeight: 600\n};\nconst justifySelfStart = {\n  justifySelf: 'start'\n};\nconst form = {\n  display: 'grid'\n};\nconst useChangePasswordStyles = makeStyles(theme => ({\n  form,\n  section: {\n    background: '#ffffff',\n    display: 'grid',\n    justifyContent: 'start',\n    padding: 30\n  },\n  sectionItem: _objectSpread({}, sectionItem, {\n    [theme.breakpoints.down('xs')]: {\n      display: 'block'\n    }\n  }),\n  justifySelfStart,\n  userNameDiv: _objectSpread({}, sectionItem, {\n    placeItems: 'center end',\n    marginBottom: 30,\n    [theme.breakpoints.down('xs')]: {\n      gridGap: 20,\n      gridTemplateColumns: 'minmax(auto, 38px) minmax(auto, 340px)'\n    }\n  })\n}));\n\nfunction ChangePassword({\n  user\n}) {\n  const classes = useChangePasswordStyles();\n  const dispatch = useDispatch();\n\n  const _useLoader = useLoader(),\n        loading = _useLoader.loading,\n        setLoading = _useLoader.setLoading,\n        formError = _useLoader.formError;\n\n  const onSubmit = values => {\n    setLoading(true);\n    dispatch(userActions.changePassword(values));\n  };\n\n  const validate = ({\n    newPassword,\n    confirmPassword\n  }) => {\n    const errors = {};\n\n    if (newPassword && newPassword.length < 6) {\n      errors.newPassword = 'Password should be 6 or more characters.';\n    }\n\n    if (confirmPassword && confirmPassword !== newPassword) {\n      errors.confirmPassword = 'Please make sure both passwords match.';\n    }\n\n    return errors;\n  };\n\n  const _useForm = useForm({\n    onSubmit,\n    validate\n  }),\n        form = _useForm.form,\n        handleSubmit = _useForm.handleSubmit,\n        submitting = _useForm.submitting,\n        submitFailed = _useForm.submitFailed,\n        errors = _useForm.errors;\n\n  const oldPassword = useField('oldPassword', form);\n  const newPassword = useField('newPassword', form);\n  const confirmPassword = useField('confirmPassword', form);\n  const disabled = oldPassword.meta.pristine || newPassword.meta.pristine || confirmPassword.meta.pristine || !oldPassword.input.value || !newPassword.input.value || !confirmPassword.input.value || submitting || loading;\n  const buttonProps = {\n    disabled,\n    type: 'submit',\n    variant: 'contained',\n    color: 'primary',\n    className: classes.justifySelfStart\n  };\n  const commonProps = {\n    type: 'password',\n    autoComplete: 'new-password'\n  };\n\n  const currentPasswordProps = _objectSpread({}, commonProps, {\n    text: 'Old Password',\n    formItem: oldPassword,\n    autoComplete: 'current-password'\n  });\n\n  const newPasswordProps = _objectSpread({}, commonProps, {\n    text: 'New Password',\n    formItem: newPassword\n  });\n\n  const confirmPasswordProps = _objectSpread({}, commonProps, {\n    text: 'Confirm New Password',\n    formItem: confirmPassword\n  });\n\n  return React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.userNameDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(ProfilePicture, {\n    user: user,\n    size: 38,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, user.userName)), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    autoComplete: \"username\",\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(SectionItem, Object.assign({}, currentPasswordProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), React.createElement(SectionItem, Object.assign({}, newPasswordProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(SectionItem, Object.assign({}, confirmPasswordProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(Button, Object.assign({}, buttonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), loading && React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), \"Change Password\"))), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, submitFailed && React.createElement(ErrorText, {\n    align: \"left\",\n    text: Object.values(errors)[0],\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), formError && React.createElement(ErrorText, {\n    align: \"left\",\n    text: formError,\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }))));\n}\n\nconst useSectionItemStyles = makeStyles(theme => ({\n  typography,\n  sectionItem: _objectSpread({}, sectionItem, {\n    [theme.breakpoints.down('xs')]: {\n      display: 'unset'\n    }\n  }),\n  textFieldInput: {\n    padding: 10\n  },\n  textField: {\n    alignSelf: 'center'\n  }\n}));\n\nfunction SectionItem({\n  text,\n  formItem,\n  type = 'text',\n  autoComplete = ''\n}) {\n  const classes = useSectionItemStyles();\n\n  const textFieldProps = _objectSpread({}, formItem.input, {\n    error: formItem.meta.error && formItem.meta.submitFailed,\n    variant: 'outlined',\n    fullWidth: true,\n    type,\n    inputProps: {\n      className: classes.textFieldInput\n    },\n    className: classes.textField,\n    autoComplete\n  });\n\n  return React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, text)), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, text))), React.createElement(TextField, Object.assign({}, textFieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  })));\n}\n\nconst usePictureSectionItemStyles = makeStyles(theme => ({\n  justifySelfStart,\n  typography,\n  pictureSectionItem: _objectSpread({}, sectionItem, {\n    placeItems: 'center end',\n    [theme.breakpoints.down('xs')]: {\n      gridGap: 20,\n      gridTemplateColumns: 'minmax(auto, 38px) minmax(auto, 340px)'\n    }\n  }),\n  typographyChangePic: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  }\n}));\n\nfunction PictureSectionItem({\n  user\n}) {\n  const classes = usePictureSectionItemStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showDialog = _useState2[0],\n        toggleDialog = _useState2[1];\n\n  const _useLoader2 = useLoader(),\n        loading = _useLoader2.loading,\n        setLoading = _useLoader2.setLoading;\n\n  const inputRef = useRef();\n\n  const onImageClick = () => toggleDialog(true);\n\n  const profilePictureProps = {\n    size: 38,\n    user,\n    loading,\n    setLoading,\n    onImageClick,\n    inputRef\n  };\n  const typographyProps = {\n    color: 'primary',\n    variant: 'body2',\n    onClick: user.profileImageUrl ? onImageClick : () => inputRef.current.click(),\n    className: classes.typographyChangePic\n  };\n  const changeProfilePicDialogProps = {\n    id: user.id,\n    onClose: () => toggleDialog(false),\n    loading,\n    setLoading,\n    inputRef\n  };\n  return React.createElement(\"div\", {\n    className: classes.pictureSectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(ProfilePicture, Object.assign({}, profilePictureProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, user.userName), React.createElement(Typography, Object.assign({}, typographyProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }), \"Change Profile Photo\")), showDialog && React.createElement(ChangeProfilePicDialog, Object.assign({}, changeProfilePicDialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  })));\n}\n\nconst useEditProfileStyles = makeStyles(theme => ({\n  section: {\n    background: '#ffffff',\n    display: 'grid',\n    justifyContent: 'start',\n    padding: 30\n  },\n  sectionItem: _objectSpread({}, sectionItem, {\n    [theme.breakpoints.down('xs')]: {\n      display: 'block'\n    }\n  }),\n  form,\n  typography,\n  justifySelfStart\n}));\n\nfunction EditProfile({\n  user\n}) {\n  const classes = useEditProfileStyles();\n  const dispatch = useDispatch();\n\n  const _useLoader3 = useLoader(),\n        loading = _useLoader3.loading,\n        setLoading = _useLoader3.setLoading,\n        formError = _useLoader3.formError;\n\n  const onSubmit = payload => {\n    dispatch(userActions.update({\n      payload,\n      params: user.id\n    }));\n    setLoading(true);\n  };\n\n  const validate = ({\n    fullName,\n    bio,\n    email,\n    phoneNumber\n  }) => {\n    const errors = {};\n\n    if (!email) {\n      errors.email = 'Email is required.';\n    }\n\n    if (!fullName) {\n      errors.fullName = 'Name is required.';\n    } else if (fullName && fullName.length > 30) {\n      errors.fullName = 'Enter a name under 30 characters.';\n    }\n\n    if (bio && bio.length > 130) {\n      errors.bio = 'Your bio must be 130 characters or fewer';\n    }\n\n    if (phoneNumber) {\n      const regex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n      if (!phoneNumber.match(regex)) {\n        errors.phoneNumber = 'Enter a valid phone number';\n      }\n    }\n\n    return errors;\n  };\n\n  const initialValues = {\n    fullName: user.fullName || '',\n    website: user.website || '',\n    bio: user.bio || '',\n    email: user.email || '',\n    phoneNumber: user.phoneNumber || ''\n  };\n\n  const _useForm2 = useForm({\n    onSubmit,\n    validate,\n    initialValues\n  }),\n        form = _useForm2.form,\n        handleSubmit = _useForm2.handleSubmit,\n        submitting = _useForm2.submitting,\n        pristine = _useForm2.pristine,\n        submitFailed = _useForm2.submitFailed,\n        errors = _useForm2.errors;\n\n  const fullName = useField('fullName', form);\n  const website = useField('website', form);\n  const bio = useField('bio', form);\n  const email = useField('email', form);\n  const phoneNumber = useField('phoneNumber', form);\n\n  const textFieldProps = _objectSpread({}, bio.input, {\n    variant: 'outlined',\n    multiline: true,\n    rowsMax: 3,\n    rows: 3,\n    fullWidth: true\n  });\n\n  const buttonProps = {\n    disabled: pristine || submitting || loading,\n    type: 'submit',\n    variant: 'contained',\n    color: 'primary',\n    className: classes.justifySelfStart\n  };\n  return React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, React.createElement(PictureSectionItem, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, React.createElement(SectionItem, {\n    text: \"Name\",\n    formItem: fullName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }), React.createElement(SectionItem, {\n    text: \"Website\",\n    formItem: website,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }, \"Bio\")), React.createElement(TextField, Object.assign({}, textFieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, \"Private information\")), React.createElement(SectionItem, {\n    text: \"Email\",\n    formItem: email,\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }), React.createElement(SectionItem, {\n    text: \"Phone Number\",\n    formItem: phoneNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }), React.createElement(Button, Object.assign({}, buttonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }), loading && React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }), \"Submit\"))), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, submitFailed && React.createElement(ErrorText, {\n    align: \"left\",\n    text: Object.values(errors)[0],\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }), formError && React.createElement(ErrorText, {\n    align: \"left\",\n    text: formError,\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  }))));\n}\n\nconst useEditProfilePageStyles = makeStyles(theme => ({\n  section: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    [theme.breakpoints.down('sm')]: {\n      gridTemplateColumns: 'minmax(48px, max-content) 0px auto'\n    },\n    [theme.breakpoints.up('sm')]: {\n      gridTemplateColumns: 'minmax(220px, max-content) auto'\n    },\n    border: '1px solid #dbdbdb'\n  },\n  permanentDrawerPaper: {\n    borderRight: '1px solid #dbdbdb',\n    left: 'unset',\n    top: 'unset',\n    position: 'relative'\n  },\n  permanentDrawerRoot: {\n    height: '100%',\n    '& div': {\n      zIndex: 888\n    }\n  },\n  temporaryDrawer: {\n    '& div': {\n      width: 220\n    }\n  },\n  listItemSelected: {\n    borderLeft: '2px solid black',\n    '& span': {\n      fontWeight: 600\n    }\n  },\n  listItemButton: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  menuButton: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    },\n    marginLeft: 'unset',\n    '&:hover': {\n      background: 'none'\n    }\n  }\n}));\n\nfunction EditProfilePage({\n  user,\n  location: {\n    pathname\n  },\n  history\n}) {\n  const classes = useEditProfilePageStyles();\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mobileOpen = _useState4[0],\n        setMobileOpen = _useState4[1];\n\n  const handleDrawerToggle = () => setMobileOpen(!mobileOpen);\n\n  const handleListClick = index => () => {\n    switch (index) {\n      case 0:\n        history.push('edit');\n        break;\n\n      case 1:\n        {\n          history.push('change-password');\n          break;\n        }\n\n      default:\n        break;\n    }\n  };\n\n  const handleSelected = index => {\n    switch (index) {\n      case 0:\n        return pathname.includes('edit');\n\n      case 1:\n        return pathname.includes('change-password');\n\n      default:\n        break;\n    }\n  };\n\n  const options = ['Edit Profile', 'Change password', 'Authorized Applications', 'Email and SMS', 'Manage Contacts', 'Privacy and Security'];\n  const drawer = React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545\n    },\n    __self: this\n  }, options.map((text, index) => {\n    const listItemProps = {\n      button: true,\n      key: text,\n      selected: handleSelected(index),\n      onClick: handleListClick(index),\n      classes: {\n        selected: classes.listItemSelected,\n        button: classes.listItemButton\n      }\n    };\n    return React.createElement(ListItem, Object.assign({}, listItemProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }));\n  }));\n  const iconButtonprops = {\n    edge: 'start',\n    onClick: handleDrawerToggle,\n    className: classes.menuButton,\n    disableRipple: true\n  };\n  const temporaryDrawerProps = {\n    variant: 'temporary',\n    anchor: 'left',\n    open: mobileOpen,\n    onClose: handleDrawerToggle,\n    classes: {\n      paperAnchorLeft: classes.temporaryDrawer\n    }\n  };\n  const permanentDrawerProps = {\n    variant: 'permanent',\n    open: true,\n    classes: {\n      paper: classes.permanentDrawerPaper,\n      root: classes.permanentDrawerRoot\n    }\n  };\n  const hiddenProps = {\n    xsDown: true,\n    implementation: 'css',\n    className: classes.permanentDrawerRoot\n  };\n  return React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594\n    },\n    __self: this\n  }, React.createElement(IconButton, Object.assign({}, iconButtonprops, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595\n    },\n    __self: this\n  }), React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596\n    },\n    __self: this\n  })), React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599\n    },\n    __self: this\n  }, React.createElement(Drawer, Object.assign({}, temporaryDrawerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600\n    },\n    __self: this\n  }), drawer)), React.createElement(Hidden, Object.assign({}, hiddenProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602\n    },\n    __self: this\n  }), React.createElement(Drawer, Object.assign({}, permanentDrawerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603\n    },\n    __self: this\n  }), drawer))), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606\n    },\n    __self: this\n  }, pathname.includes('edit') && React.createElement(EditProfile, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607\n    },\n    __self: this\n  }), pathname.includes('change-password') && React.createElement(ChangePassword, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608\n    },\n    __self: this\n  })));\n}\n\nexport default EditProfilePage;","map":{"version":3,"sources":["/home/abade/projects/instagram-web-clone/src/components/Profile/EditProfilePage.js"],"names":["React","useState","useRef","useDispatch","useForm","useField","Button","Drawer","Hidden","IconButton","List","ListItem","ListItemText","TextField","Typography","MenuIcon","makeStyles","userActions","ProfilePicture","ChangeProfilePicDialog","ErrorText","Loader","useLoader","sectionItem","display","gridAutoFlow","gridGap","placeItems","marginBottom","gridTemplateColumns","typography","fontWeight","justifySelfStart","justifySelf","form","useChangePasswordStyles","theme","section","background","justifyContent","padding","breakpoints","down","userNameDiv","ChangePassword","user","classes","dispatch","loading","setLoading","formError","onSubmit","values","changePassword","validate","newPassword","confirmPassword","errors","length","handleSubmit","submitting","submitFailed","oldPassword","disabled","meta","pristine","input","value","buttonProps","type","variant","color","className","commonProps","autoComplete","currentPasswordProps","text","formItem","newPasswordProps","confirmPasswordProps","userName","Object","useSectionItemStyles","textFieldInput","textField","alignSelf","SectionItem","textFieldProps","error","fullWidth","inputProps","usePictureSectionItemStyles","pictureSectionItem","typographyChangePic","cursor","PictureSectionItem","showDialog","toggleDialog","inputRef","onImageClick","profilePictureProps","size","typographyProps","onClick","profileImageUrl","current","click","changeProfilePicDialogProps","id","onClose","useEditProfileStyles","EditProfile","payload","update","params","fullName","bio","email","phoneNumber","regex","match","initialValues","website","multiline","rowsMax","rows","useEditProfilePageStyles","up","border","permanentDrawerPaper","borderRight","left","top","position","permanentDrawerRoot","height","zIndex","temporaryDrawer","width","listItemSelected","borderLeft","listItemButton","paddingTop","paddingBottom","menuButton","marginLeft","EditProfilePage","location","pathname","history","mobileOpen","setMobileOpen","handleDrawerToggle","handleListClick","index","push","handleSelected","includes","options","drawer","map","listItemProps","button","key","selected","iconButtonprops","edge","disableRipple","temporaryDrawerProps","anchor","open","paperAnchorLeft","permanentDrawerProps","paper","root","hiddenProps","xsDown","implementation"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm, useField } from 'react-final-form-hooks';\n\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { userActions } from '../../redux/actions/api';\n\nimport { ProfilePicture, ChangeProfilePicDialog } from './utils';\nimport { ErrorText, Loader, useLoader } from '../utils';\n\nconst sectionItem = {\n  display: 'grid',\n  gridAutoFlow: 'column',\n  gridGap: 30,\n  placeItems: 'start end',\n  marginBottom: 16,\n  gridTemplateColumns: 'minmax(auto, 150px) minmax(auto, 340px)'\n};\nconst typography = {\n  fontWeight: 600\n};\nconst justifySelfStart = {\n  justifySelf: 'start'\n};\nconst form = {\n  display: 'grid'\n};\n\nconst useChangePasswordStyles = makeStyles(theme => ({\n  form,\n\n  section: {\n    background: '#ffffff',\n    display: 'grid',\n    justifyContent: 'start',\n    padding: 30\n  },\n  sectionItem: {\n    ...sectionItem,\n    [theme.breakpoints.down('xs')]: {\n      display: 'block'\n    }\n  },\n\n  justifySelfStart,\n\n  userNameDiv: {\n    ...sectionItem,\n    placeItems: 'center end',\n    marginBottom: 30,\n    [theme.breakpoints.down('xs')]: {\n      gridGap: 20,\n      gridTemplateColumns: 'minmax(auto, 38px) minmax(auto, 340px)'\n    }\n  }\n}));\n\nfunction ChangePassword({ user }) {\n  const classes = useChangePasswordStyles();\n  const dispatch = useDispatch();\n  const { loading, setLoading, formError } = useLoader();\n\n  const onSubmit = values => {\n    setLoading(true);\n    dispatch(userActions.changePassword(values));\n  };\n  const validate = ({ newPassword, confirmPassword }) => {\n    const errors = {};\n    if (newPassword && newPassword.length < 6) {\n      errors.newPassword = 'Password should be 6 or more characters.';\n    }\n    if (confirmPassword && confirmPassword !== newPassword) {\n      errors.confirmPassword = 'Please make sure both passwords match.';\n    }\n    return errors;\n  };\n\n  const { form, handleSubmit, submitting, submitFailed, errors } = useForm({\n    onSubmit,\n    validate\n  });\n\n  const oldPassword = useField('oldPassword', form);\n  const newPassword = useField('newPassword', form);\n  const confirmPassword = useField('confirmPassword', form);\n\n  const disabled =\n    oldPassword.meta.pristine ||\n    newPassword.meta.pristine ||\n    confirmPassword.meta.pristine ||\n    !oldPassword.input.value ||\n    !newPassword.input.value ||\n    !confirmPassword.input.value ||\n    submitting ||\n    loading;\n  const buttonProps = {\n    disabled,\n    type: 'submit',\n    variant: 'contained',\n    color: 'primary',\n    className: classes.justifySelfStart\n  };\n\n  const commonProps = {\n    type: 'password',\n    autoComplete: 'new-password'\n  };\n  const currentPasswordProps = {\n    ...commonProps,\n    text: 'Old Password',\n    formItem: oldPassword,\n    autoComplete: 'current-password'\n  };\n  const newPasswordProps = {\n    ...commonProps,\n    text: 'New Password',\n    formItem: newPassword\n  };\n  const confirmPasswordProps = {\n    ...commonProps,\n    text: 'Confirm New Password',\n    formItem: confirmPassword\n  };\n\n  return (\n    <section className={classes.section}>\n      <div className={classes.userNameDiv}>\n        <ProfilePicture user={user} size={38} />\n        <Typography variant=\"h6\" className={classes.justifySelfStart}>\n          {user.userName}\n        </Typography>\n      </div>\n      <form onSubmit={handleSubmit} className={classes.form}>\n        <input type=\"text\" autoComplete=\"username\" hidden />\n        <SectionItem {...currentPasswordProps} />\n        <SectionItem {...newPasswordProps} />\n        <SectionItem {...confirmPasswordProps} />\n        <div className={classes.sectionItem}>\n          <div />\n          <Button {...buttonProps}>\n            {loading && <Loader />}Change Password\n          </Button>\n        </div>\n      </form>\n      <div className={classes.sectionItem}>\n        <div />\n        <div className={classes.justifySelfStart}>\n          {submitFailed && (\n            <ErrorText\n              align=\"left\"\n              text={Object.values(errors)[0]}\n              className={classes.justifySelfStart}\n            />\n          )}\n          {formError && (\n            <ErrorText\n              align=\"left\"\n              text={formError}\n              className={classes.justifySelfStart}\n            />\n          )}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nconst useSectionItemStyles = makeStyles(theme => ({\n  typography,\n  sectionItem: {\n    ...sectionItem,\n    [theme.breakpoints.down('xs')]: {\n      display: 'unset'\n    }\n  },\n\n  textFieldInput: {\n    padding: 10\n  },\n  textField: {\n    alignSelf: 'center'\n  }\n}));\n\nfunction SectionItem({ text, formItem, type = 'text', autoComplete = '' }) {\n  const classes = useSectionItemStyles();\n\n  const textFieldProps = {\n    ...formItem.input,\n    error: formItem.meta.error && formItem.meta.submitFailed,\n    variant: 'outlined',\n    fullWidth: true,\n    type,\n    inputProps: {\n      className: classes.textFieldInput\n    },\n    className: classes.textField,\n    autoComplete\n  };\n\n  return (\n    <div className={classes.sectionItem}>\n      <aside>\n        <Hidden xsDown>\n          <Typography className={classes.typography} align=\"right\">\n            {text}\n          </Typography>\n        </Hidden>\n        <Hidden smUp>\n          <Typography className={classes.typography}>{text}</Typography>\n        </Hidden>\n      </aside>\n      <TextField {...textFieldProps} />\n    </div>\n  );\n}\n\nconst usePictureSectionItemStyles = makeStyles(theme => ({\n  justifySelfStart,\n  typography,\n\n  pictureSectionItem: {\n    ...sectionItem,\n    placeItems: 'center end',\n    [theme.breakpoints.down('xs')]: {\n      gridGap: 20,\n      gridTemplateColumns: 'minmax(auto, 38px) minmax(auto, 340px)'\n    }\n  },\n\n  typographyChangePic: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  }\n}));\n\nfunction PictureSectionItem({ user }) {\n  const classes = usePictureSectionItemStyles();\n  const [showDialog, toggleDialog] = useState(false);\n  const { loading, setLoading } = useLoader();\n  const inputRef = useRef();\n\n  const onImageClick = () => toggleDialog(true);\n\n  const profilePictureProps = {\n    size: 38,\n    user,\n    loading,\n    setLoading,\n    onImageClick,\n    inputRef\n  };\n  const typographyProps = {\n    color: 'primary',\n    variant: 'body2',\n    onClick: user.profileImageUrl\n      ? onImageClick\n      : () => inputRef.current.click(),\n    className: classes.typographyChangePic\n  };\n  const changeProfilePicDialogProps = {\n    id: user.id,\n    onClose: () => toggleDialog(false),\n    loading,\n    setLoading,\n    inputRef\n  };\n\n  return (\n    <div className={classes.pictureSectionItem}>\n      <ProfilePicture {...profilePictureProps} />\n      <div className={classes.justifySelfStart}>\n        <Typography className={classes.typography}>{user.userName}</Typography>\n        <Typography {...typographyProps}>Change Profile Photo</Typography>\n      </div>\n      {showDialog && (\n        <ChangeProfilePicDialog {...changeProfilePicDialogProps} />\n      )}\n    </div>\n  );\n}\n\nconst useEditProfileStyles = makeStyles(theme => ({\n  section: {\n    background: '#ffffff',\n    display: 'grid',\n    justifyContent: 'start',\n    padding: 30\n  },\n  sectionItem: {\n    ...sectionItem,\n    [theme.breakpoints.down('xs')]: {\n      display: 'block'\n    }\n  },\n\n  form,\n\n  typography,\n  justifySelfStart\n}));\n\nfunction EditProfile({ user }) {\n  const classes = useEditProfileStyles();\n  const dispatch = useDispatch();\n  const { loading, setLoading, formError } = useLoader();\n\n  const onSubmit = payload => {\n    dispatch(userActions.update({ payload, params: user.id }));\n    setLoading(true);\n  };\n\n  const validate = ({ fullName, bio, email, phoneNumber }) => {\n    const errors = {};\n    if (!email) {\n      errors.email = 'Email is required.';\n    }\n    if (!fullName) {\n      errors.fullName = 'Name is required.';\n    } else if (fullName && fullName.length > 30) {\n      errors.fullName = 'Enter a name under 30 characters.';\n    }\n    if (bio && bio.length > 130) {\n      errors.bio = 'Your bio must be 130 characters or fewer';\n    }\n    if (phoneNumber) {\n      const regex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n      if (!phoneNumber.match(regex)) {\n        errors.phoneNumber = 'Enter a valid phone number';\n      }\n    }\n\n    return errors;\n  };\n\n  const initialValues = {\n    fullName: user.fullName || '',\n    website: user.website || '',\n    bio: user.bio || '',\n    email: user.email || '',\n    phoneNumber: user.phoneNumber || ''\n  };\n\n  const {\n    form,\n    handleSubmit,\n    submitting,\n    pristine,\n    submitFailed,\n    errors\n  } = useForm({\n    onSubmit,\n    validate,\n    initialValues\n  });\n\n  const fullName = useField('fullName', form);\n  const website = useField('website', form);\n  const bio = useField('bio', form);\n  const email = useField('email', form);\n  const phoneNumber = useField('phoneNumber', form);\n\n  const textFieldProps = {\n    ...bio.input,\n    variant: 'outlined',\n    multiline: true,\n    rowsMax: 3,\n    rows: 3,\n    fullWidth: true\n  };\n\n  const buttonProps = {\n    disabled: pristine || submitting || loading,\n    type: 'submit',\n    variant: 'contained',\n    color: 'primary',\n    className: classes.justifySelfStart\n  };\n\n  return (\n    <section className={classes.section}>\n      <PictureSectionItem user={user} />\n      <form onSubmit={handleSubmit} className={classes.form}>\n        <SectionItem text=\"Name\" formItem={fullName} />\n        <SectionItem text=\"Website\" formItem={website} />\n\n        <div className={classes.sectionItem}>\n          <aside>\n            <Typography className={classes.typography}>Bio</Typography>\n          </aside>\n          <TextField {...textFieldProps} />\n        </div>\n\n        <div className={classes.sectionItem}>\n          <div />\n          <Typography\n            color=\"textSecondary\"\n            className={classes.justifySelfStart}\n          >\n            Private information\n          </Typography>\n        </div>\n\n        <SectionItem text=\"Email\" formItem={email} type=\"email\" />\n        <SectionItem text=\"Phone Number\" formItem={phoneNumber} />\n\n        <div className={classes.sectionItem}>\n          <div />\n          <Button {...buttonProps}>{loading && <Loader />}Submit</Button>\n        </div>\n      </form>\n      <div className={classes.sectionItem}>\n        <div />\n        <div className={classes.justifySelfStart}>\n          {submitFailed && (\n            <ErrorText\n              align=\"left\"\n              text={Object.values(errors)[0]}\n              className={classes.justifySelfStart}\n            />\n          )}\n          {formError && (\n            <ErrorText\n              align=\"left\"\n              text={formError}\n              className={classes.justifySelfStart}\n            />\n          )}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nconst useEditProfilePageStyles = makeStyles(theme => ({\n  section: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    [theme.breakpoints.down('sm')]: {\n      gridTemplateColumns: 'minmax(48px, max-content) 0px auto'\n    },\n    [theme.breakpoints.up('sm')]: {\n      gridTemplateColumns: 'minmax(220px, max-content) auto'\n    },\n    border: '1px solid #dbdbdb'\n  },\n\n  permanentDrawerPaper: {\n    borderRight: '1px solid #dbdbdb',\n    left: 'unset',\n    top: 'unset',\n    position: 'relative'\n  },\n  permanentDrawerRoot: {\n    height: '100%',\n    '& div': {\n      zIndex: 888\n    }\n  },\n  temporaryDrawer: {\n    '& div': {\n      width: 220\n    }\n  },\n\n  listItemSelected: {\n    borderLeft: '2px solid black',\n    '& span': {\n      fontWeight: 600\n    }\n  },\n  listItemButton: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n\n  menuButton: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    },\n    marginLeft: 'unset',\n    '&:hover': {\n      background: 'none'\n    }\n  }\n}));\n\nfunction EditProfilePage({ user, location: { pathname }, history }) {\n  const classes = useEditProfilePageStyles();\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => setMobileOpen(!mobileOpen);\n  const handleListClick = index => () => {\n    switch (index) {\n      case 0:\n        history.push('edit');\n        break;\n\n      case 1: {\n        history.push('change-password');\n        break;\n      }\n\n      default:\n        break;\n    }\n  };\n  const handleSelected = index => {\n    switch (index) {\n      case 0:\n        return pathname.includes('edit');\n\n      case 1:\n        return pathname.includes('change-password');\n\n      default:\n        break;\n    }\n  };\n\n  const options = [\n    'Edit Profile',\n    'Change password',\n    'Authorized Applications',\n    'Email and SMS',\n    'Manage Contacts',\n    'Privacy and Security'\n  ];\n\n  const drawer = (\n    <List>\n      {options.map((text, index) => {\n        const listItemProps = {\n          button: true,\n          key: text,\n          selected: handleSelected(index),\n          onClick: handleListClick(index),\n          classes: {\n            selected: classes.listItemSelected,\n            button: classes.listItemButton\n          }\n        };\n        return (\n          <ListItem {...listItemProps}>\n            <ListItemText primary={text} />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n\n  const iconButtonprops = {\n    edge: 'start',\n    onClick: handleDrawerToggle,\n    className: classes.menuButton,\n    disableRipple: true\n  };\n  const temporaryDrawerProps = {\n    variant: 'temporary',\n    anchor: 'left',\n    open: mobileOpen,\n    onClose: handleDrawerToggle,\n    classes: { paperAnchorLeft: classes.temporaryDrawer }\n  };\n  const permanentDrawerProps = {\n    variant: 'permanent',\n    open: true,\n    classes: {\n      paper: classes.permanentDrawerPaper,\n      root: classes.permanentDrawerRoot\n    }\n  };\n  const hiddenProps = {\n    xsDown: true,\n    implementation: 'css',\n    className: classes.permanentDrawerRoot\n  };\n\n  return (\n    <section className={classes.section}>\n      <IconButton {...iconButtonprops}>\n        <MenuIcon />\n      </IconButton>\n      <nav>\n        <Hidden smUp implementation=\"css\">\n          <Drawer {...temporaryDrawerProps}>{drawer}</Drawer>\n        </Hidden>\n        <Hidden {...hiddenProps}>\n          <Drawer {...permanentDrawerProps}>{drawer}</Drawer>\n        </Hidden>\n      </nav>\n      <main>\n        {pathname.includes('edit') && <EditProfile user={user} />}\n        {pathname.includes('change-password') && <ChangePassword user={user} />}\n      </main>\n    </section>\n  );\n}\n\nexport default EditProfilePage;\n"]},"metadata":{},"sourceType":"module"}