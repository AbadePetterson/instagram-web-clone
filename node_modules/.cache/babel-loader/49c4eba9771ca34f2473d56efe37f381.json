{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport rootReducer from '../reducers/';\nimport rootSaga from '../sagas';\nexport const history = createBrowserHistory();\n\nconst configureStore = intialState => {\n  const logger = createLogger({\n    predicate: () => process.env.NODE_ENV !== 'production',\n    collapsed: true,\n    duration: true,\n    diff: true\n  });\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer(history), intialState, applyMiddleware(logger, sagaMiddleware, routerMiddleware(history)));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst intialState = {};\nconst store = configureStore(intialState);\nexport default store;","map":{"version":3,"sources":["/home/abade/projects/instagram-web-clone/src/redux/singletons/store.js"],"names":["createStore","applyMiddleware","createLogger","createSagaMiddleware","routerMiddleware","createBrowserHistory","rootReducer","rootSaga","history","configureStore","intialState","logger","predicate","process","env","NODE_ENV","collapsed","duration","diff","sagaMiddleware","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,OAAO,GAAGH,oBAAoB,EAApC;;AAEP,MAAMI,cAAc,GAAGC,WAAW,IAAI;AACpC,QAAMC,MAAM,GAAGT,YAAY,CAAC;AAC1BU,IAAAA,SAAS,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YADhB;AAE1BC,IAAAA,SAAS,EAAE,IAFe;AAG1BC,IAAAA,QAAQ,EAAE,IAHgB;AAI1BC,IAAAA,IAAI,EAAE;AAJoB,GAAD,CAA3B;AAOA,QAAMC,cAAc,GAAGhB,oBAAoB,EAA3C;AAEA,QAAMiB,KAAK,GAAGpB,WAAW,CACvBM,WAAW,CAACE,OAAD,CADY,EAEvBE,WAFuB,EAGvBT,eAAe,CAACU,MAAD,EAASQ,cAAT,EAAyBf,gBAAgB,CAACI,OAAD,CAAzC,CAHQ,CAAzB;AAMAW,EAAAA,cAAc,CAACE,GAAf,CAAmBd,QAAnB;AAEA,SAAOa,KAAP;AACD,CAnBD;;AAqBA,MAAMV,WAAW,GAAG,EAApB;AAEA,MAAMU,KAAK,GAAGX,cAAc,CAACC,WAAD,CAA5B;AAEA,eAAeU,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport rootReducer from '../reducers/';\nimport rootSaga from '../sagas';\n\nexport const history = createBrowserHistory();\n\nconst configureStore = intialState => {\n  const logger = createLogger({\n    predicate: () => process.env.NODE_ENV !== 'production',\n    collapsed: true,\n    duration: true,\n    diff: true\n  });\n\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(\n    rootReducer(history),\n    intialState,\n    applyMiddleware(logger, sagaMiddleware, routerMiddleware(history))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nconst intialState = {};\n\nconst store = configureStore(intialState);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}