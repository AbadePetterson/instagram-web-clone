{"ast":null,"code":"import _slicedToArray from \"/home/abade/projects/instagram-web-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/abade/projects/instagram-web-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abade/projects/instagram-web-clone/src/components/Feed/Post.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { distanceInWordsStrict } from 'date-fns';\nimport classNames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconsSpriteSheet1 from '../../images/icons-spritesheet.png';\nimport IconsSpriteSheet2 from '../../images/icons-spritesheet2.png';\nimport { likeAction, getLikesAction, followAction, deletePostAction } from '../../redux/actions/api';\nimport { NameCard } from './utils';\nimport { SuggestionsSkeleton } from '../utils/skeleton';\nimport { UnfollowDialog } from '../utils';\nimport { CustomUsersListCardItem } from './Feed';\nconst commonProps = {\n  backgroundImage: \"url(\".concat(IconsSpriteSheet2, \")\"),\n  backgroundSize: '355px 344px',\n  backgroundRepeat: 'no-repeat',\n  height: 24,\n  width: 24,\n  justifySelf: 'center',\n  '&:hover': {\n    cursor: 'pointer'\n  }\n};\nconst usePostStyles = makeStyles(theme => ({\n  article: {\n    border: '1px solid #e6e6e6',\n    background: '#ffffff',\n    marginBottom: 60,\n    [theme.breakpoints.down('xs')]: {\n      border: 'unset',\n      marginBottom: 0\n    }\n  },\n  nameCardWrapper: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'auto minmax(auto, 20px)',\n    gridGap: 10,\n    alignItems: 'center',\n    padding: 16\n  },\n  icon: {\n    backgroundImage: \"url(\".concat(IconsSpriteSheet1, \")\"),\n    backgroundPosition: '-217px -170px',\n    backgroundSize: '503px 516px',\n    backgroundRepeat: 'no-repeat',\n    height: 24,\n    width: 18,\n    justifySelf: 'center',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  image: {\n    width: '100%'\n  },\n  iconWrapper: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: '24px 24px 24px minmax(24px, auto)',\n    gridGap: 16,\n    padding: '6px 0px'\n  },\n  comments: _objectSpread({}, commonProps, {\n    backgroundPosition: '-117px -97px'\n  }),\n  share: _objectSpread({}, commonProps, {\n    backgroundPosition: '-175px -320px'\n  }),\n  save: _objectSpread({}, commonProps, {\n    backgroundPosition: '-48px -320px',\n    justifySelf: 'right'\n  }),\n  container: {\n    padding: '0px 16px 8px'\n  },\n  typography: {\n    fontWeight: 600\n  },\n  distance: {\n    fontSize: 10\n  }\n}));\nexport default function Post({\n  post: {\n    imageUrl,\n    owner: {\n      userName,\n      id: ownerId,\n      profileImageUrl\n    },\n    likes,\n    caption,\n    postedAt,\n    ownerHasLiked,\n    id\n  }\n}) {\n  const classes = usePostStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        dialog = _useState2[0],\n        setDialog = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        unfollowDialog = _useState4[0],\n        setUnfollowDialog = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        deleteDialog = _useState6[0],\n        setDeleteDialog = _useState6[1];\n\n  const dispatch = useDispatch();\n  const nameCardProps = {\n    userName,\n    profileImageUrl,\n    imageSize: 32\n  };\n  const distanceSection = React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: classes.distance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"\".concat(distanceInWordsStrict(new Date(), postedAt), \" ago\").toUpperCase());\n  const captionSection = React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \" \".concat(caption));\n  const userNameSection = React.createElement(Link, {\n    to: \"\".concat(userName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"span\",\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, userName));\n\n  const handleOptionsClick = bool => () => setDialog(bool);\n\n  const handleUnfollowButtonClick = () => {\n    dispatch(followAction({\n      params: ownerId,\n      payload: {\n        follow: false\n      },\n      namespace: 'post'\n    }));\n    setUnfollowDialog(false);\n  };\n\n  const onUnfollowButtonClick = () => {\n    setDialog(false);\n    setUnfollowDialog(true);\n  };\n\n  const onDeleteButtonClick = () => {\n    setDialog(false);\n    setDeleteDialog(true);\n  };\n\n  const handleDeleteButtonClick = () => {\n    dispatch(deletePostAction({\n      params: {\n        id\n      }\n    }));\n    setDeleteDialog(false);\n  };\n\n  const optionsDialogProps = {\n    onClose: handleOptionsClick(false),\n    userName,\n    profileImageUrl,\n    onUnfollowButtonClick,\n    onDeleteButtonClick,\n    ownerId\n  };\n  const unfollowDialogProps = {\n    onClose: () => setUnfollowDialog(false),\n    userName,\n    profileImageUrl,\n    handleUnfollowButtonClick\n  };\n  const deleteDialogProps = {\n    onClose: () => setDeleteDialog(false),\n    handleDeleteButtonClick\n  };\n  return React.createElement(React.Fragment, null, React.createElement(\"article\", {\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nameCardWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(NameCard, Object.assign({}, nameCardProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.icon,\n    onClick: handleOptionsClick(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"post\",\n    className: classes.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.iconWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(LikeButton, {\n    id: id,\n    ownerHasLiked: ownerHasLiked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.share,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  })), React.createElement(DisplayLikes, {\n    likes: likes,\n    id: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), userNameSection, captionSection, distanceSection), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(Comment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }))), dialog && React.createElement(OptionsDialog, Object.assign({}, optionsDialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  })), unfollowDialog && React.createElement(UnfollowDialog, Object.assign({}, unfollowDialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  })), deleteDialog && React.createElement(DeleteDialog, Object.assign({}, deleteDialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })));\n}\nconst dialogScrollPaper = {\n  display: 'grid',\n  gridTemplateColumns: 'minmax(auto, 496px)'\n};\nconst button = {\n  padding: '12px 8px'\n};\nconst useDeleteDialogStyles = makeStyles({\n  dialogScrollPaper,\n  button,\n  wrapper: {\n    padding: 20\n  }\n});\n\nfunction DeleteDialog({\n  onClose,\n  handleDeleteButtonClick\n}) {\n  const classes = useDeleteDialogStyles();\n  const dialogProps = {\n    open: true,\n    classes: {\n      scrollPaper: classes.dialogScrollPaper\n    },\n    onClose,\n    TransitionComponent: Zoom\n  };\n  return React.createElement(Dialog, Object.assign({}, dialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Delete Post?\"), React.createElement(Typography, {\n    align: \"center\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Are you sure you want to delete this post?\")), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleDeleteButtonClick,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"Delete\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: onClose,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, \"Cancel\"));\n}\n\nconst useOptionsDialogStyles = makeStyles(theme => ({\n  dialogScrollPaper,\n  button,\n  buttonRed: {\n    color: theme.palette.error.main\n  }\n}));\n\nfunction OptionsDialog({\n  onClose,\n  onUnfollowButtonClick,\n  ownerId,\n  onDeleteButtonClick\n}) {\n  const classes = useOptionsDialogStyles();\n  const userId = useSelector(state => state.api.user.id);\n  const isOwner = userId === ownerId;\n  const dialogProps = {\n    open: true,\n    classes: {\n      scrollPaper: classes.dialogScrollPaper\n    },\n    onClose,\n    TransitionComponent: Zoom\n  };\n\n  if (isOwner) {\n    return React.createElement(Dialog, Object.assign({}, dialogProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classNames(classes.button, classes.buttonRed),\n      onClick: onDeleteButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Go to post\"), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: onClose,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n  return React.createElement(Dialog, Object.assign({}, dialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classNames(classes.button, classes.buttonRed),\n    onClick: onUnfollowButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \"Unfollow\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, \"Go to post\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, \"Share\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, \"Copy Link\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: onClose,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, \"Cancel\"));\n}\n\nconst useDisplayLikesStyles = makeStyles({\n  typography: {\n    fontWeight: 600\n  },\n  span: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  }\n});\n\nfunction DisplayLikes({\n  likes,\n  id\n}) {\n  const classes = useDisplayLikesStyles();\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        dialog = _useState8[0],\n        setDialog = _useState8[1];\n\n  const handleDialogClick = bool => () => setDialog(bool);\n\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: likes ? handleDialogClick(true) : undefined,\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, likes === 1 ? '1 like' : \"\".concat(likes, \" likes\"))), dialog && React.createElement(LikesDialog, {\n    likes: likes,\n    id: id,\n    onClose: handleDialogClick(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }));\n}\n\nconst useLikeDialogStyles = makeStyles({\n  cancelButton: _objectSpread({}, commonProps, {\n    backgroundPosition: '-224px -319px'\n  }),\n  titleContainer: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: '50px auto 50px',\n    padding: '6px 0px',\n    alignItems: 'center'\n  },\n  dialogPaperWidth: {\n    maxWidth: 360\n  }\n});\n\nfunction LikesDialog({\n  likes,\n  onClose,\n  id\n}) {\n  const classes = useLikeDialogStyles();\n  const dispatch = useDispatch();\n  const list = useSelector(state => state.api.customUsersList);\n  const friends = list.data && list.data[id];\n  useEffect(() => {\n    dispatch(getLikesAction({\n      params: {\n        id\n      }\n    }));\n  }, [dispatch, id]);\n  const dialogProps = {\n    open: true,\n    onClose,\n    classes: {\n      paperWidthFalse: classes.dialogPaperWidth\n    },\n    maxWidth: false,\n    TransitionComponent: Zoom\n  };\n  const count = likes > 4 ? 4 : likes;\n  return React.createElement(Dialog, Object.assign({}, dialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.titleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }, \"Likes\"), React.createElement(\"div\", {\n    className: classes.cancelButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }), friends ? friends.map(friend => React.createElement(CustomUsersListCardItem, {\n    key: friend.id,\n    friend: friend,\n    namespace: \"generic\",\n    list: list,\n    postId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  })) : React.createElement(SuggestionsSkeleton, {\n    count: count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }));\n}\n\nconst commonKeyFramesProps = {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '25%': {\n    transform: 'scale(1.2)'\n  },\n  '50%': {\n    transform: 'scale(0.95)'\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n};\nconst commonAnimationProps = {\n  animationTimingFunction: 'ease-in-out',\n  transform: 'scale(1)'\n};\nconst useLikeButtonStyles = makeStyles({\n  like: _objectSpread({}, commonProps, {\n    backgroundPosition: '-275px -269px',\n    animation: '$like-button-animation 0.45s'\n  }, commonAnimationProps),\n  liked: _objectSpread({}, commonProps, {\n    backgroundPosition: '-250px -269px',\n    animation: '$liked-button-animation 0.45s'\n  }, commonAnimationProps),\n  '@keyframes like-button-animation': commonKeyFramesProps,\n  '@keyframes liked-button-animation': commonKeyFramesProps\n});\n\nfunction LikeButton({\n  id,\n  ownerHasLiked\n}) {\n  const classes = useLikeButtonStyles();\n  const dispatch = useDispatch();\n  const className = ownerHasLiked ? classes.liked : classes.like;\n\n  const handleLikeClick = () => dispatch(likeAction({\n    params: {\n      id,\n      type: 'like'\n    }\n  }));\n\n  const handleUnlikeClick = () => dispatch(likeAction({\n    params: {\n      id,\n      type: 'unlike'\n    }\n  }));\n\n  const onClick = ownerHasLiked ? handleUnlikeClick : handleLikeClick;\n  return React.createElement(\"div\", {\n    className: className,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498\n    },\n    __self: this\n  });\n}\n\nconst useCommentStyles = makeStyles({\n  textField: {\n    padding: '10px 0px'\n  },\n  root: {\n    fontSize: 14\n  },\n  underline: {\n    '&::before': {\n      border: 'none'\n    },\n    '&::after': {\n      border: 'none'\n    },\n    '&:hover&:before': {\n      border: 'none'\n    }\n  },\n  container: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'auto minmax(auto, 56px)',\n    padding: '0px 0px 0px 16px'\n  },\n  button: {\n    width: 48,\n    padding: 'unset'\n  }\n});\n\nfunction Comment() {\n  const classes = useCommentStyles();\n  const textFieldProps = {\n    fullWidth: true,\n    placeholder: 'Add a comment...',\n    multiline: true,\n    rowsMax: 2,\n    rows: 1,\n    className: classes.textField,\n    InputProps: {\n      classes: {\n        root: classes.root,\n        underline: classes.underline\n      }\n    }\n  };\n  return React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({}, textFieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554\n    },\n    __self: this\n  })), React.createElement(Button, {\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555\n    },\n    __self: this\n  }, \"Post\"));\n}","map":{"version":3,"sources":["/home/abade/projects/instagram-web-clone/src/components/Feed/Post.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Link","distanceInWordsStrict","classNames","Button","Dialog","Divider","Hidden","TextField","Typography","Zoom","makeStyles","IconsSpriteSheet1","IconsSpriteSheet2","likeAction","getLikesAction","followAction","deletePostAction","NameCard","SuggestionsSkeleton","UnfollowDialog","CustomUsersListCardItem","commonProps","backgroundImage","backgroundSize","backgroundRepeat","height","width","justifySelf","cursor","usePostStyles","theme","article","border","background","marginBottom","breakpoints","down","nameCardWrapper","display","gridAutoFlow","gridTemplateColumns","gridGap","alignItems","padding","icon","backgroundPosition","image","iconWrapper","comments","share","save","container","typography","fontWeight","distance","fontSize","Post","post","imageUrl","owner","userName","id","ownerId","profileImageUrl","likes","caption","postedAt","ownerHasLiked","classes","dialog","setDialog","unfollowDialog","setUnfollowDialog","deleteDialog","setDeleteDialog","dispatch","nameCardProps","imageSize","distanceSection","Date","toUpperCase","captionSection","userNameSection","handleOptionsClick","bool","handleUnfollowButtonClick","params","payload","follow","namespace","onUnfollowButtonClick","onDeleteButtonClick","handleDeleteButtonClick","optionsDialogProps","onClose","unfollowDialogProps","deleteDialogProps","dialogScrollPaper","button","useDeleteDialogStyles","wrapper","DeleteDialog","dialogProps","open","scrollPaper","TransitionComponent","useOptionsDialogStyles","buttonRed","color","palette","error","main","OptionsDialog","userId","state","api","user","isOwner","useDisplayLikesStyles","span","DisplayLikes","handleDialogClick","undefined","useLikeDialogStyles","cancelButton","titleContainer","dialogPaperWidth","maxWidth","LikesDialog","list","customUsersList","friends","data","paperWidthFalse","count","map","friend","commonKeyFramesProps","transform","commonAnimationProps","animationTimingFunction","useLikeButtonStyles","like","animation","liked","LikeButton","className","handleLikeClick","type","handleUnlikeClick","onClick","useCommentStyles","textField","root","underline","Comment","textFieldProps","fullWidth","placeholder","multiline","rowsMax","rows","InputProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { distanceInWordsStrict } from 'date-fns';\nimport classNames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport IconsSpriteSheet1 from '../../images/icons-spritesheet.png';\nimport IconsSpriteSheet2 from '../../images/icons-spritesheet2.png';\n\nimport {\n  likeAction,\n  getLikesAction,\n  followAction,\n  deletePostAction\n} from '../../redux/actions/api';\n\nimport { NameCard } from './utils';\nimport { SuggestionsSkeleton } from '../utils/skeleton';\nimport { UnfollowDialog } from '../utils';\nimport { CustomUsersListCardItem } from './Feed';\n\nconst commonProps = {\n  backgroundImage: `url(${IconsSpriteSheet2})`,\n  backgroundSize: '355px 344px',\n  backgroundRepeat: 'no-repeat',\n  height: 24,\n  width: 24,\n  justifySelf: 'center',\n  '&:hover': {\n    cursor: 'pointer'\n  }\n};\nconst usePostStyles = makeStyles(theme => ({\n  article: {\n    border: '1px solid #e6e6e6',\n    background: '#ffffff',\n    marginBottom: 60,\n    [theme.breakpoints.down('xs')]: {\n      border: 'unset',\n      marginBottom: 0\n    }\n  },\n\n  nameCardWrapper: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'auto minmax(auto, 20px)',\n    gridGap: 10,\n    alignItems: 'center',\n    padding: 16\n  },\n  icon: {\n    backgroundImage: `url(${IconsSpriteSheet1})`,\n    backgroundPosition: '-217px -170px',\n    backgroundSize: '503px 516px',\n    backgroundRepeat: 'no-repeat',\n    height: 24,\n    width: 18,\n    justifySelf: 'center',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n\n  image: {\n    width: '100%'\n  },\n\n  iconWrapper: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: '24px 24px 24px minmax(24px, auto)',\n    gridGap: 16,\n    padding: '6px 0px'\n  },\n\n  comments: {\n    ...commonProps,\n    backgroundPosition: '-117px -97px'\n  },\n  share: {\n    ...commonProps,\n    backgroundPosition: '-175px -320px'\n  },\n  save: {\n    ...commonProps,\n    backgroundPosition: '-48px -320px',\n    justifySelf: 'right'\n  },\n  container: {\n    padding: '0px 16px 8px'\n  },\n  typography: {\n    fontWeight: 600\n  },\n  distance: {\n    fontSize: 10\n  }\n}));\n\nexport default function Post({\n  post: {\n    imageUrl,\n    owner: { userName, id: ownerId, profileImageUrl },\n    likes,\n    caption,\n    postedAt,\n    ownerHasLiked,\n    id\n  }\n}) {\n  const classes = usePostStyles();\n  const [dialog, setDialog] = useState(false);\n  const [unfollowDialog, setUnfollowDialog] = useState(false);\n  const [deleteDialog, setDeleteDialog] = useState(false);\n  const dispatch = useDispatch();\n\n  const nameCardProps = {\n    userName,\n    profileImageUrl,\n    imageSize: 32\n  };\n\n  const distanceSection = (\n    <Typography color=\"textSecondary\" className={classes.distance}>\n      {`${distanceInWordsStrict(new Date(), postedAt)} ago`.toUpperCase()}\n    </Typography>\n  );\n  const captionSection = (\n    <Typography variant=\"body2\" component=\"span\">\n      {` ${caption}`}\n    </Typography>\n  );\n  const userNameSection = (\n    <Link to={`${userName}`}>\n      <Typography\n        variant=\"subtitle2\"\n        component=\"span\"\n        className={classes.typography}\n      >\n        {userName}\n      </Typography>\n    </Link>\n  );\n\n  const handleOptionsClick = bool => () => setDialog(bool);\n  const handleUnfollowButtonClick = () => {\n    dispatch(\n      followAction({\n        params: ownerId,\n        payload: { follow: false },\n        namespace: 'post'\n      })\n    );\n    setUnfollowDialog(false);\n  };\n  const onUnfollowButtonClick = () => {\n    setDialog(false);\n    setUnfollowDialog(true);\n  };\n  const onDeleteButtonClick = () => {\n    setDialog(false);\n    setDeleteDialog(true);\n  };\n  const handleDeleteButtonClick = () => {\n    dispatch(\n      deletePostAction({\n        params: { id }\n      })\n    );\n    setDeleteDialog(false);\n  };\n\n  const optionsDialogProps = {\n    onClose: handleOptionsClick(false),\n    userName,\n    profileImageUrl,\n    onUnfollowButtonClick,\n    onDeleteButtonClick,\n    ownerId\n  };\n  const unfollowDialogProps = {\n    onClose: () => setUnfollowDialog(false),\n    userName,\n    profileImageUrl,\n    handleUnfollowButtonClick\n  };\n  const deleteDialogProps = {\n    onClose: () => setDeleteDialog(false),\n    handleDeleteButtonClick\n  };\n\n  return (\n    <>\n      <article className={classes.article}>\n        <div className={classes.nameCardWrapper}>\n          <NameCard {...nameCardProps} />\n          <div className={classes.icon} onClick={handleOptionsClick(true)} />\n        </div>\n        <div>\n          <img src={imageUrl} alt=\"post\" className={classes.image} />\n        </div>\n        <div className={classes.container}>\n          <div className={classes.iconWrapper}>\n            <LikeButton id={id} ownerHasLiked={ownerHasLiked} />\n            <div className={classes.comments} />\n            <div className={classes.share} />\n            <div className={classes.save} />\n          </div>\n          <DisplayLikes likes={likes} id={id} />\n          {userNameSection}\n          {captionSection}\n          {distanceSection}\n        </div>\n        <Hidden xsDown>\n          <Divider />\n          <Comment />\n        </Hidden>\n      </article>\n      {dialog && <OptionsDialog {...optionsDialogProps} />}\n      {unfollowDialog && <UnfollowDialog {...unfollowDialogProps} />}\n      {deleteDialog && <DeleteDialog {...deleteDialogProps} />}\n    </>\n  );\n}\n\nconst dialogScrollPaper = {\n  display: 'grid',\n  gridTemplateColumns: 'minmax(auto, 496px)'\n};\nconst button = {\n  padding: '12px 8px'\n};\nconst useDeleteDialogStyles = makeStyles({\n  dialogScrollPaper,\n  button,\n\n  wrapper: {\n    padding: 20\n  }\n});\n\nfunction DeleteDialog({ onClose, handleDeleteButtonClick }) {\n  const classes = useDeleteDialogStyles();\n\n  const dialogProps = {\n    open: true,\n    classes: {\n      scrollPaper: classes.dialogScrollPaper\n    },\n    onClose,\n    TransitionComponent: Zoom\n  };\n\n  return (\n    <Dialog {...dialogProps}>\n      <div className={classes.wrapper}>\n        <Typography align=\"center\" variant=\"h6\" gutterBottom>\n          Delete Post?\n        </Typography>\n        <Typography align=\"center\" color=\"textSecondary\">\n          Are you sure you want to delete this post?\n        </Typography>\n      </div>\n      <Divider />\n      <Button\n        color=\"primary\"\n        onClick={handleDeleteButtonClick}\n        className={classes.button}\n      >\n        Delete\n      </Button>\n      <Divider />\n      <Button onClick={onClose} className={classes.button}>\n        Cancel\n      </Button>\n    </Dialog>\n  );\n}\n\nconst useOptionsDialogStyles = makeStyles(theme => ({\n  dialogScrollPaper,\n  button,\n\n  buttonRed: {\n    color: theme.palette.error.main\n  }\n}));\n\nfunction OptionsDialog({\n  onClose,\n  onUnfollowButtonClick,\n  ownerId,\n  onDeleteButtonClick\n}) {\n  const classes = useOptionsDialogStyles();\n  const userId = useSelector(state => state.api.user.id);\n  const isOwner = userId === ownerId;\n\n  const dialogProps = {\n    open: true,\n    classes: {\n      scrollPaper: classes.dialogScrollPaper\n    },\n    onClose,\n    TransitionComponent: Zoom\n  };\n\n  if (isOwner) {\n    return (\n      <Dialog {...dialogProps}>\n        <Button\n          className={classNames(classes.button, classes.buttonRed)}\n          onClick={onDeleteButtonClick}\n        >\n          Delete\n        </Button>\n        <Divider />\n        <Button className={classes.button}>Go to post</Button>\n        <Divider />\n        <Button onClick={onClose} className={classes.button}>\n          Cancel\n        </Button>\n      </Dialog>\n    );\n  }\n\n  return (\n    <Dialog {...dialogProps}>\n      <Button\n        className={classNames(classes.button, classes.buttonRed)}\n        onClick={onUnfollowButtonClick}\n      >\n        Unfollow\n      </Button>\n      <Divider />\n      <Button className={classes.button}>Go to post</Button>\n      <Divider />\n      <Button className={classes.button}>Share</Button>\n      <Divider />\n      <Button className={classes.button}>Copy Link</Button>\n      <Divider />\n      <Button onClick={onClose} className={classes.button}>\n        Cancel\n      </Button>\n    </Dialog>\n  );\n}\n\nconst useDisplayLikesStyles = makeStyles({\n  typography: {\n    fontWeight: 600\n  },\n  span: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  }\n});\n\nfunction DisplayLikes({ likes, id }) {\n  const classes = useDisplayLikesStyles();\n  const [dialog, setDialog] = useState(false);\n\n  const handleDialogClick = bool => () => setDialog(bool);\n\n  return (\n    <>\n      <Typography variant=\"subtitle2\" className={classes.typography}>\n        <span\n          onClick={likes ? handleDialogClick(true) : undefined}\n          className={classes.span}\n        >\n          {likes === 1 ? '1 like' : `${likes} likes`}\n        </span>\n      </Typography>\n      {dialog && (\n        <LikesDialog likes={likes} id={id} onClose={handleDialogClick(false)} />\n      )}\n    </>\n  );\n}\n\nconst useLikeDialogStyles = makeStyles({\n  cancelButton: {\n    ...commonProps,\n    backgroundPosition: '-224px -319px'\n  },\n\n  titleContainer: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: '50px auto 50px',\n    padding: '6px 0px',\n    alignItems: 'center'\n  },\n\n  dialogPaperWidth: {\n    maxWidth: 360\n  }\n});\n\nfunction LikesDialog({ likes, onClose, id }) {\n  const classes = useLikeDialogStyles();\n  const dispatch = useDispatch();\n  const list = useSelector(state => state.api.customUsersList);\n  const friends = list.data && list.data[id];\n\n  useEffect(() => {\n    dispatch(getLikesAction({ params: { id } }));\n  }, [dispatch, id]);\n\n  const dialogProps = {\n    open: true,\n    onClose,\n    classes: { paperWidthFalse: classes.dialogPaperWidth },\n    maxWidth: false,\n    TransitionComponent: Zoom\n  };\n  const count = likes > 4 ? 4 : likes;\n\n  return (\n    <Dialog {...dialogProps}>\n      <div className={classes.titleContainer}>\n        <div />\n        <Typography variant=\"h6\" align=\"center\">\n          Likes\n        </Typography>\n        <div className={classes.cancelButton} onClick={onClose} />\n      </div>\n      <Divider />\n      {friends ? (\n        friends.map(friend => (\n          <CustomUsersListCardItem\n            key={friend.id}\n            friend={friend}\n            namespace=\"generic\"\n            list={list}\n            postId={id}\n          />\n        ))\n      ) : (\n        <SuggestionsSkeleton count={count} />\n      )}\n    </Dialog>\n  );\n}\n\nconst commonKeyFramesProps = {\n  '0%': { transform: 'scale(1)' },\n  '25%': { transform: 'scale(1.2)' },\n  '50%': { transform: 'scale(0.95)' },\n  '100%': { transform: 'scale(1)' }\n};\nconst commonAnimationProps = {\n  animationTimingFunction: 'ease-in-out',\n  transform: 'scale(1)'\n};\nconst useLikeButtonStyles = makeStyles({\n  like: {\n    ...commonProps,\n    backgroundPosition: '-275px -269px',\n    animation: '$like-button-animation 0.45s',\n    ...commonAnimationProps\n  },\n  liked: {\n    ...commonProps,\n    backgroundPosition: '-250px -269px',\n    animation: '$liked-button-animation 0.45s',\n    ...commonAnimationProps\n  },\n  '@keyframes like-button-animation': commonKeyFramesProps,\n  '@keyframes liked-button-animation': commonKeyFramesProps\n});\n\nfunction LikeButton({ id, ownerHasLiked }) {\n  const classes = useLikeButtonStyles();\n  const dispatch = useDispatch();\n  const className = ownerHasLiked ? classes.liked : classes.like;\n\n  const handleLikeClick = () =>\n    dispatch(likeAction({ params: { id, type: 'like' } }));\n  const handleUnlikeClick = () =>\n    dispatch(likeAction({ params: { id, type: 'unlike' } }));\n\n  const onClick = ownerHasLiked ? handleUnlikeClick : handleLikeClick;\n\n  return <div className={className} onClick={onClick} />;\n}\n\nconst useCommentStyles = makeStyles({\n  textField: {\n    padding: '10px 0px'\n  },\n\n  root: {\n    fontSize: 14\n  },\n  underline: {\n    '&::before': {\n      border: 'none'\n    },\n    '&::after': {\n      border: 'none'\n    },\n    '&:hover&:before': {\n      border: 'none'\n    }\n  },\n\n  container: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'auto minmax(auto, 56px)',\n    padding: '0px 0px 0px 16px'\n  },\n\n  button: {\n    width: 48,\n    padding: 'unset'\n  }\n});\n\nfunction Comment() {\n  const classes = useCommentStyles();\n\n  const textFieldProps = {\n    fullWidth: true,\n    placeholder: 'Add a comment...',\n    multiline: true,\n    rowsMax: 2,\n    rows: 1,\n    className: classes.textField,\n    InputProps: {\n      classes: {\n        root: classes.root,\n        underline: classes.underline\n      }\n    }\n  };\n\n  return (\n    <div className={classes.container}>\n      <TextField {...textFieldProps} />\n      <Button color=\"primary\" className={classes.button}>\n        Post\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}