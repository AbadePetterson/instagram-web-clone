{"ast":null,"code":"import _slicedToArray from \"/home/abade/projects/instagram-web-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abade/projects/instagram-web-clone/src/components/Feed/Feed.js\";\nimport React, { useEffect, useRef, useState, lazy, Suspense } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NameCard } from './utils';\nimport { getSuggestionsAction, getAllPostsAction, followAction } from '../../redux/actions/api';\nimport { SuggestionsSkeleton, AllPostsSkeleton, ProfilePostsSkeleton } from '../utils/skeleton';\nimport { generateKey, Loader, LinearLoader, UnfollowDialog } from '../utils';\nimport LoadingPage from '../LoadingPage';\nimport { Avatar } from '@material-ui/core';\nconst Post = lazy(() => import('./Post'));\nexport default function Feed() {\n  const dispatch = useDispatch();\n  const allPosts = useSelector(state => state.api.allPosts);\n  useEffect(() => {\n    dispatch(getAllPostsAction());\n  }, [dispatch]);\n\n  if (!allPosts) {\n    return React.createElement(LoadingPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n  if (allPosts.length === 0) {\n    return React.createElement(SuggestionsCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(AllPosts, {\n    posts: allPosts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n}\nconst useAllPostsStyles = makeStyles(theme => ({\n  container: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'minmax(auto, 600px) 300px',\n    gridGap: 35,\n    [theme.breakpoints.down('sm')]: {\n      gridTemplateColumns: 'minmax(auto, 600px)',\n      justifyContent: 'center'\n    },\n    '& .slick-slider': {\n      display: 'grid'\n    }\n  },\n  wrapper: {\n    display: 'grid',\n    margin: '0px 28px 24px',\n    justifyContent: 'center',\n    gridTemplateColumns: 'minmax(auto, 300px)'\n  }\n}));\n\nfunction AllPosts({\n  posts\n}) {\n  const classes = useAllPostsStyles();\n  const user = useSelector(state => state.api.user);\n  return React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(ProfilePostsSkeleton, {\n      count: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(SwipeableSuggestions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), posts.map(post => React.createElement(Suspense, {\n    fallback: React.createElement(AllPostsSkeleton, {\n      count: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }),\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Post, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })))), React.createElement(Hidden, {\n    smDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(NameCard, {\n    userName: user && user.userName,\n    fullName: user && user.fullName,\n    profileImageUrl: user && user.profileImageUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(SuggestionsCard, {\n    side: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))));\n}\n\nconst border = '1px solid #e6e6e6';\nconst marginBottom = 20;\nconst useSwipeableSuggestionsStyles = makeStyles({\n  slide: {\n    background: '#ffffff',\n    padding: '10px 0px 20px 0px',\n    marginBottom,\n    border,\n    borderTop: 'none',\n    '& .slick-slide > div': {\n      border,\n      margin: '0px 10px',\n      padding: 20\n    }\n  },\n  typography: {\n    background: '#ffffff',\n    border,\n    borderBottom: 'none',\n    padding: '10px 0px 0px 12px'\n  },\n  skeleton: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    marginBottom,\n    gridGap: 16\n  }\n});\n\nfunction SwipeableSuggestions() {\n  const classes = useSwipeableSuggestionsStyles();\n  const dispatch = useDispatch();\n  const suggestions = useSelector(({\n    api\n  }) => api.suggestions);\n  const data = suggestions.data;\n  useEffect(() => {\n    dispatch(getSuggestionsAction());\n  }, [dispatch]);\n  const sliderProps = {\n    className: classes.slide,\n    dots: false,\n    infinite: true,\n    speed: 1000,\n    touchThreshold: 1000,\n    variableWidth: true,\n    swipeToSlide: true,\n    arrows: false,\n    easing: 'ease-in-out'\n  };\n\n  if (!data) {\n    return React.createElement(\"div\", {\n      className: classes.skeleton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(ProfilePostsSkeleton, {\n      count: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }));\n  }\n\n  if (data.length < 1) {\n    return null;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"subtitle2\",\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Suggestions For You\"), React.createElement(Slider, Object.assign({}, sliderProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), data && data.map(friend => React.createElement(SwipeableSuggestionsCardItem, {\n    key: friend.id,\n    friend: friend,\n    list: suggestions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }))));\n}\n\nconst useSwipeableSuggestionsCardItemStyles = makeStyles(theme => ({\n  avatar: {\n    width: 54,\n    height: 54\n  },\n  avatarImg: {\n    userSelect: 'none'\n  },\n  typography: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    width: '100%'\n  },\n  card: {\n    display: 'grid',\n    justifyItems: 'center',\n    width: 138,\n    [theme.breakpoints.down('xs')]: {\n      width: 116\n    }\n  }\n}));\n\nfunction SwipeableSuggestionsCardItem({\n  friend,\n  list\n}) {\n  const profileImageUrl = friend.profileImageUrl,\n        userName = friend.userName,\n        fullName = friend.fullName,\n        id = friend.id;\n  const classes = useSwipeableSuggestionsCardItemStyles();\n\n  const _useFollowButtonState = useFollowButtonState({\n    friend,\n    list\n  }),\n        button = _useFollowButtonState.button,\n        unfollowDialogProps = _useFollowButtonState.unfollowDialogProps,\n        dialog = _useFollowButtonState.dialog;\n\n  const avatarProps = {\n    src: profileImageUrl,\n    alt: 'user image',\n    classes: {\n      root: classes.avatar,\n      img: classes.avatarImg\n    }\n  };\n  const userNameProps = {\n    variant: 'subtitle2',\n    className: classes.typography,\n    align: 'center'\n  };\n  const fullNameProps = {\n    color: 'textSecondary',\n    variant: 'body2',\n    className: classes.typography,\n    align: 'center'\n  };\n  return React.createElement(\"div\", {\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"\".concat(userName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(Avatar, Object.assign({}, avatarProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }))), React.createElement(Link, {\n    to: \"\".concat(userName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(Typography, Object.assign({}, userNameProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }), userName)), React.createElement(Typography, Object.assign({}, fullNameProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), fullName), button, dialog && React.createElement(UnfollowDialog, Object.assign({}, unfollowDialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }))));\n}\n\nconst useSuggestionsCardStyles = makeStyles(theme => ({\n  article: {\n    margin: '0 12px',\n    display: 'grid',\n    gridTemplateColumns: 'minmax(auto, 600px)',\n    justifyContent: 'center'\n  },\n  typographyHeading: {\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '1rem'\n    }\n  },\n  paper: {\n    padding: '8px 0px'\n  },\n  buttonWrapper: {\n    padding: 16\n  }\n}));\n\nfunction SuggestionsCard({\n  side = false\n}) {\n  const classes = useSuggestionsCardStyles();\n  const dispatch = useDispatch();\n  const suggestions = useSelector(({\n    api\n  }) => api.suggestions);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showButton = _useState2[0],\n        setButton = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        disabled = _useState4[0],\n        setDisabled = _useState4[1];\n\n  const data = suggestions.data;\n  useEffect(() => {\n    dispatch(getSuggestionsAction());\n  }, [dispatch]);\n  useEffect(() => {\n    if (data && !side) {\n      const isFollowingAnyone = data.some(friend => friend.ownerIsFollowing);\n\n      if (isFollowingAnyone) {\n        setButton(true);\n      } else {\n        setButton(false);\n      }\n    }\n  }, [side, data]);\n  const typographyProps = {\n    variant: 'h6',\n    align: 'left',\n    gutterBottom: true,\n    className: classes.typographyHeading\n  };\n  const typographyPropsSide = {\n    align: 'center',\n    gutterBottom: true,\n    color: 'textSecondary',\n    variant: 'subtitle2'\n  };\n  const buttonProps = {\n    disabled,\n    variant: 'contained',\n    color: 'primary',\n    fullWidth: true,\n    onClick: () => {\n      setDisabled(true);\n      dispatch(getAllPostsAction());\n    }\n  };\n  return React.createElement(\"article\", {\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, !side && React.createElement(Typography, Object.assign({}, typographyProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }), \"Suggestions For You\"), React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, side && React.createElement(Typography, Object.assign({}, typographyPropsSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }), \"Suggestions For You\"), data ? data.map(friend => {\n    const customUsersListCardItemProps = {\n      friend,\n      key: friend.id,\n      list: suggestions,\n      side\n    };\n    return React.createElement(CustomUsersListCardItem, Object.assign({}, customUsersListCardItemProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }));\n  }) : React.createElement(SuggestionsSkeleton, {\n    count: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }), showButton && React.createElement(\"div\", {\n    className: classes.buttonWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, React.createElement(Button, Object.assign({}, buttonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }), \"Get Started\")), disabled && React.createElement(LinearLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  })));\n}\n\nconst useCustomUsersListCardItemStyles = makeStyles({\n  card: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'minmax(auto, 500px)',\n    gridGap: 10,\n    alignItems: 'center',\n    padding: '8px 16px'\n  }\n});\nexport function CustomUsersListCardItem({\n  friend,\n  list,\n  side,\n  namespace,\n  postId\n}) {\n  const profileImageUrl = friend.profileImageUrl,\n        userName = friend.userName,\n        fullName = friend.fullName;\n  const classes = useCustomUsersListCardItemStyles();\n\n  const _useFollowButtonState2 = useFollowButtonState({\n    friend,\n    list,\n    side,\n    namespace,\n    postId\n  }),\n        button = _useFollowButtonState2.button,\n        unfollowDialogProps = _useFollowButtonState2.unfollowDialogProps,\n        dialog = _useFollowButtonState2.dialog;\n\n  const nameCardProps = {\n    profileImageUrl,\n    userName,\n    fullName\n  };\n  return React.createElement(\"div\", {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, React.createElement(NameCard, Object.assign({}, nameCardProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  })), button, dialog && React.createElement(UnfollowDialog, Object.assign({}, unfollowDialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  })));\n}\nconst useFollowButtonStateStyles = makeStyles({\n  button: {\n    height: 30,\n    padding: '0px 16px',\n    marginTop: ({\n      side\n    }) => side ? 0 : 10\n  }\n});\n\nfunction useFollowButtonState({\n  list,\n  namespace = '',\n  postId,\n  side,\n  friend: {\n    id,\n    userName,\n    profileImageUrl,\n    ownerIsFollowing,\n    isOwner = false,\n    isFollowingOwner = false\n  }\n}) {\n  const classes = useFollowButtonStateStyles({\n    side\n  });\n  const dispatch = useDispatch();\n\n  const _useRef = useRef(generateKey()),\n        key = _useRef.current;\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loadingUnfollow = _useState8[0],\n        setLoadingUnfollow = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        dialog = _useState10[0],\n        setDialog = _useState10[1];\n\n  useEffect(() => {\n    if (list.key === key) {\n      setLoading(false);\n      setLoadingUnfollow(false);\n    }\n  }, [key, list]);\n\n  const handleDialogClick = bool => () => setDialog(bool);\n\n  const handleFollowButtonClick = () => {\n    setLoading(true);\n    dispatch(followAction({\n      key,\n      params: id,\n      payload: {\n        follow: true\n      },\n      namespace,\n      postId\n    }));\n  };\n\n  const handleUnfollowButtonClick = () => {\n    setDialog(false);\n    setLoadingUnfollow(true);\n    dispatch(followAction({\n      key,\n      params: id,\n      payload: {\n        follow: false\n      },\n      namespace,\n      postId\n    }));\n  };\n\n  const followButtonProps = {\n    disabled: loading,\n    variant: !side ? 'contained' : 'text',\n    color: 'primary',\n    className: classes.button,\n    onClick: handleFollowButtonClick,\n    fullWidth: true\n  };\n  const followingButtonProps = {\n    disabled: loadingUnfollow,\n    variant: !side ? 'outlined' : 'text',\n    className: classes.button,\n    onClick: handleDialogClick(true),\n    fullWidth: true\n  };\n  const unfollowDialogProps = {\n    userName,\n    onClose: handleDialogClick(false),\n    profileImageUrl,\n    handleUnfollowButtonClick\n  };\n  const followingButton = React.createElement(Button, Object.assign({}, followingButtonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500\n    },\n    __self: this\n  }), loadingUnfollow && React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501\n    },\n    __self: this\n  }), \"Following\");\n  const followButton = React.createElement(Button, Object.assign({}, followButtonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505\n    },\n    __self: this\n  }), loading && React.createElement(Loader, {\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506\n    },\n    __self: this\n  }), isFollowingOwner ? 'Follow Back' : 'Follow');\n  let button;\n\n  if (!isOwner) {\n    button = ownerIsFollowing ? followingButton : followButton;\n  }\n\n  return {\n    button,\n    unfollowDialogProps,\n    dialog\n  };\n}","map":{"version":3,"sources":["/home/abade/projects/instagram-web-clone/src/components/Feed/Feed.js"],"names":["React","useEffect","useRef","useState","lazy","Suspense","Link","useDispatch","useSelector","Slider","Button","Hidden","Paper","Typography","makeStyles","NameCard","getSuggestionsAction","getAllPostsAction","followAction","SuggestionsSkeleton","AllPostsSkeleton","ProfilePostsSkeleton","generateKey","Loader","LinearLoader","UnfollowDialog","LoadingPage","Avatar","Post","Feed","dispatch","allPosts","state","api","length","useAllPostsStyles","theme","container","display","gridAutoFlow","gridTemplateColumns","gridGap","breakpoints","down","justifyContent","wrapper","margin","AllPosts","posts","classes","user","map","post","id","userName","fullName","profileImageUrl","border","marginBottom","useSwipeableSuggestionsStyles","slide","background","padding","borderTop","typography","borderBottom","skeleton","SwipeableSuggestions","suggestions","data","sliderProps","className","dots","infinite","speed","touchThreshold","variableWidth","swipeToSlide","arrows","easing","friend","useSwipeableSuggestionsCardItemStyles","avatar","width","height","avatarImg","userSelect","textOverflow","overflow","whiteSpace","card","justifyItems","SwipeableSuggestionsCardItem","list","useFollowButtonState","button","unfollowDialogProps","dialog","avatarProps","src","alt","root","img","userNameProps","variant","align","fullNameProps","color","useSuggestionsCardStyles","article","typographyHeading","fontSize","paper","buttonWrapper","SuggestionsCard","side","showButton","setButton","disabled","setDisabled","isFollowingAnyone","some","ownerIsFollowing","typographyProps","gutterBottom","typographyPropsSide","buttonProps","fullWidth","onClick","customUsersListCardItemProps","key","useCustomUsersListCardItemStyles","alignItems","CustomUsersListCardItem","namespace","postId","nameCardProps","useFollowButtonStateStyles","marginTop","isOwner","isFollowingOwner","current","loading","setLoading","loadingUnfollow","setLoadingUnfollow","setDialog","handleDialogClick","bool","handleFollowButtonClick","params","payload","follow","handleUnfollowButtonClick","followButtonProps","followingButtonProps","onClose","followingButton","followButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, lazy, Suspense } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\n\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { NameCard } from './utils';\n\nimport {\n  getSuggestionsAction,\n  getAllPostsAction,\n  followAction\n} from '../../redux/actions/api';\n\nimport {\n  SuggestionsSkeleton,\n  AllPostsSkeleton,\n  ProfilePostsSkeleton\n} from '../utils/skeleton';\nimport { generateKey, Loader, LinearLoader, UnfollowDialog } from '../utils';\n\nimport LoadingPage from '../LoadingPage';\nimport { Avatar } from '@material-ui/core';\n\nconst Post = lazy(() => import('./Post'));\n\nexport default function Feed() {\n  const dispatch = useDispatch();\n  const allPosts = useSelector(state => state.api.allPosts);\n\n  useEffect(() => {\n    dispatch(getAllPostsAction());\n  }, [dispatch]);\n\n  if (!allPosts) {\n    return <LoadingPage />;\n  }\n\n  if (allPosts.length === 0) {\n    return <SuggestionsCard />;\n  }\n\n  return <AllPosts posts={allPosts} />;\n}\n\nconst useAllPostsStyles = makeStyles(theme => ({\n  container: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'minmax(auto, 600px) 300px',\n    gridGap: 35,\n    [theme.breakpoints.down('sm')]: {\n      gridTemplateColumns: 'minmax(auto, 600px)',\n      justifyContent: 'center'\n    },\n    '& .slick-slider': {\n      display: 'grid'\n    }\n  },\n\n  wrapper: {\n    display: 'grid',\n    margin: '0px 28px 24px',\n    justifyContent: 'center',\n    gridTemplateColumns: 'minmax(auto, 300px)'\n  }\n}));\n\nfunction AllPosts({ posts }) {\n  const classes = useAllPostsStyles();\n  const user = useSelector(state => state.api.user);\n\n  return (\n    <div className={classes.container}>\n      <div>\n        <Hidden mdUp>\n          <Suspense fallback={<ProfilePostsSkeleton count={3} />}>\n            <SwipeableSuggestions />\n          </Suspense>\n        </Hidden>\n        {posts.map(post => (\n          <Suspense fallback={<AllPostsSkeleton count={5} />} key={post.id}>\n            <Post post={post} />\n          </Suspense>\n        ))}\n      </div>\n      <Hidden smDown>\n        <div>\n          <div className={classes.wrapper}>\n            <NameCard\n              userName={user && user.userName}\n              fullName={user && user.fullName}\n              profileImageUrl={user && user.profileImageUrl}\n            />\n          </div>\n          <SuggestionsCard side={true} />\n        </div>\n      </Hidden>\n    </div>\n  );\n}\n\nconst border = '1px solid #e6e6e6';\nconst marginBottom = 20;\nconst useSwipeableSuggestionsStyles = makeStyles({\n  slide: {\n    background: '#ffffff',\n    padding: '10px 0px 20px 0px',\n    marginBottom,\n    border,\n    borderTop: 'none',\n    '& .slick-slide > div': {\n      border,\n      margin: '0px 10px',\n      padding: 20\n    }\n  },\n  typography: {\n    background: '#ffffff',\n    border,\n    borderBottom: 'none',\n    padding: '10px 0px 0px 12px'\n  },\n\n  skeleton: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    marginBottom,\n    gridGap: 16\n  }\n});\n\nfunction SwipeableSuggestions() {\n  const classes = useSwipeableSuggestionsStyles();\n  const dispatch = useDispatch();\n  const suggestions = useSelector(({ api }) => api.suggestions);\n\n  const data = suggestions.data;\n\n  useEffect(() => {\n    dispatch(getSuggestionsAction());\n  }, [dispatch]);\n\n  const sliderProps = {\n    className: classes.slide,\n    dots: false,\n    infinite: true,\n    speed: 1000,\n    touchThreshold: 1000,\n    variableWidth: true,\n    swipeToSlide: true,\n    arrows: false,\n    easing: 'ease-in-out'\n  };\n\n  if (!data) {\n    return (\n      <div className={classes.skeleton}>\n        <ProfilePostsSkeleton count={3} />\n      </div>\n    );\n  }\n\n  if (data.length < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <Typography\n        color=\"textSecondary\"\n        variant=\"subtitle2\"\n        className={classes.typography}\n      >\n        Suggestions For You\n      </Typography>\n      <Slider {...sliderProps}>\n        {data &&\n          data.map(friend => (\n            <SwipeableSuggestionsCardItem\n              key={friend.id}\n              friend={friend}\n              list={suggestions}\n            />\n          ))}\n      </Slider>\n    </>\n  );\n}\n\nconst useSwipeableSuggestionsCardItemStyles = makeStyles(theme => ({\n  avatar: {\n    width: 54,\n    height: 54\n  },\n  avatarImg: {\n    userSelect: 'none'\n  },\n  typography: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    width: '100%'\n  },\n  card: {\n    display: 'grid',\n    justifyItems: 'center',\n    width: 138,\n    [theme.breakpoints.down('xs')]: {\n      width: 116\n    }\n  }\n}));\n\nfunction SwipeableSuggestionsCardItem({ friend, list }) {\n  const { profileImageUrl, userName, fullName, id } = friend;\n  const classes = useSwipeableSuggestionsCardItemStyles();\n  const { button, unfollowDialogProps, dialog } = useFollowButtonState({\n    friend,\n    list\n  });\n\n  const avatarProps = {\n    src: profileImageUrl,\n    alt: 'user image',\n    classes: {\n      root: classes.avatar,\n      img: classes.avatarImg\n    }\n  };\n  const userNameProps = {\n    variant: 'subtitle2',\n    className: classes.typography,\n    align: 'center'\n  };\n  const fullNameProps = {\n    color: 'textSecondary',\n    variant: 'body2',\n    className: classes.typography,\n    align: 'center'\n  };\n\n  return (\n    <div key={id}>\n      <div className={classes.card}>\n        <Link to={`${userName}`}>\n          <Avatar {...avatarProps} />\n        </Link>\n        <Link to={`${userName}`}>\n          <Typography {...userNameProps}>{userName}</Typography>\n        </Link>\n        <Typography {...fullNameProps}>{fullName}</Typography>\n        {button}\n        {dialog && <UnfollowDialog {...unfollowDialogProps} />}\n      </div>\n    </div>\n  );\n}\n\nconst useSuggestionsCardStyles = makeStyles(theme => ({\n  article: {\n    margin: '0 12px',\n    display: 'grid',\n    gridTemplateColumns: 'minmax(auto, 600px)',\n    justifyContent: 'center'\n  },\n  typographyHeading: {\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '1rem'\n    }\n  },\n\n  paper: {\n    padding: '8px 0px'\n  },\n\n  buttonWrapper: {\n    padding: 16\n  }\n}));\n\nfunction SuggestionsCard({ side = false }) {\n  const classes = useSuggestionsCardStyles();\n  const dispatch = useDispatch();\n  const suggestions = useSelector(({ api }) => api.suggestions);\n  const [showButton, setButton] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n\n  const data = suggestions.data;\n\n  useEffect(() => {\n    dispatch(getSuggestionsAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (data && !side) {\n      const isFollowingAnyone = data.some(friend => friend.ownerIsFollowing);\n      if (isFollowingAnyone) {\n        setButton(true);\n      } else {\n        setButton(false);\n      }\n    }\n  }, [side, data]);\n\n  const typographyProps = {\n    variant: 'h6',\n    align: 'left',\n    gutterBottom: true,\n    className: classes.typographyHeading\n  };\n  const typographyPropsSide = {\n    align: 'center',\n    gutterBottom: true,\n    color: 'textSecondary',\n    variant: 'subtitle2'\n  };\n  const buttonProps = {\n    disabled,\n    variant: 'contained',\n    color: 'primary',\n    fullWidth: true,\n    onClick: () => {\n      setDisabled(true);\n      dispatch(getAllPostsAction());\n    }\n  };\n\n  return (\n    <article className={classes.article}>\n      {!side && (\n        <Typography {...typographyProps}>Suggestions For You</Typography>\n      )}\n      <Paper className={classes.paper}>\n        {side && (\n          <Typography {...typographyPropsSide}>Suggestions For You</Typography>\n        )}\n        {data ? (\n          data.map(friend => {\n            const customUsersListCardItemProps = {\n              friend,\n              key: friend.id,\n              list: suggestions,\n              side\n            };\n            return (\n              <CustomUsersListCardItem {...customUsersListCardItemProps} />\n            );\n          })\n        ) : (\n          <SuggestionsSkeleton count={12} />\n        )}\n        {showButton && (\n          <div className={classes.buttonWrapper}>\n            <Button {...buttonProps}>Get Started</Button>\n          </div>\n        )}\n        {disabled && <LinearLoader />}\n      </Paper>\n    </article>\n  );\n}\n\nconst useCustomUsersListCardItemStyles = makeStyles({\n  card: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'minmax(auto, 500px)',\n    gridGap: 10,\n    alignItems: 'center',\n    padding: '8px 16px'\n  }\n});\n\nexport function CustomUsersListCardItem({\n  friend,\n  list,\n  side,\n  namespace,\n  postId\n}) {\n  const { profileImageUrl, userName, fullName } = friend;\n  const classes = useCustomUsersListCardItemStyles();\n  const { button, unfollowDialogProps, dialog } = useFollowButtonState({\n    friend,\n    list,\n    side,\n    namespace,\n    postId\n  });\n\n  const nameCardProps = {\n    profileImageUrl,\n    userName,\n    fullName\n  };\n\n  return (\n    <div className={classes.card}>\n      <NameCard {...nameCardProps} />\n      {button}\n      {dialog && <UnfollowDialog {...unfollowDialogProps} />}\n    </div>\n  );\n}\n\nconst useFollowButtonStateStyles = makeStyles({\n  button: {\n    height: 30,\n    padding: '0px 16px',\n    marginTop: ({ side }) => (side ? 0 : 10)\n  }\n});\n\nfunction useFollowButtonState({\n  list,\n  namespace = '',\n  postId,\n  side,\n  friend: {\n    id,\n    userName,\n    profileImageUrl,\n    ownerIsFollowing,\n    isOwner = false,\n    isFollowingOwner = false\n  }\n}) {\n  const classes = useFollowButtonStateStyles({ side });\n  const dispatch = useDispatch();\n  const { current: key } = useRef(generateKey());\n  const [loading, setLoading] = useState(false);\n  const [loadingUnfollow, setLoadingUnfollow] = useState(false);\n  const [dialog, setDialog] = useState(false);\n\n  useEffect(() => {\n    if (list.key === key) {\n      setLoading(false);\n      setLoadingUnfollow(false);\n    }\n  }, [key, list]);\n\n  const handleDialogClick = bool => () => setDialog(bool);\n\n  const handleFollowButtonClick = () => {\n    setLoading(true);\n    dispatch(\n      followAction({\n        key,\n        params: id,\n        payload: { follow: true },\n        namespace,\n        postId\n      })\n    );\n  };\n  const handleUnfollowButtonClick = () => {\n    setDialog(false);\n    setLoadingUnfollow(true);\n    dispatch(\n      followAction({\n        key,\n        params: id,\n        payload: { follow: false },\n        namespace,\n        postId\n      })\n    );\n  };\n\n  const followButtonProps = {\n    disabled: loading,\n    variant: !side ? 'contained' : 'text',\n    color: 'primary',\n    className: classes.button,\n    onClick: handleFollowButtonClick,\n    fullWidth: true\n  };\n  const followingButtonProps = {\n    disabled: loadingUnfollow,\n    variant: !side ? 'outlined' : 'text',\n    className: classes.button,\n    onClick: handleDialogClick(true),\n    fullWidth: true\n  };\n  const unfollowDialogProps = {\n    userName,\n    onClose: handleDialogClick(false),\n    profileImageUrl,\n    handleUnfollowButtonClick\n  };\n  const followingButton = (\n    <Button {...followingButtonProps}>\n      {loadingUnfollow && <Loader />}Following\n    </Button>\n  );\n  const followButton = (\n    <Button {...followButtonProps}>\n      {loading && <Loader color=\"blue\" />}\n      {isFollowingOwner ? 'Follow Back' : 'Follow'}\n    </Button>\n  );\n\n  let button;\n  if (!isOwner) {\n    button = ownerIsFollowing ? followingButton : followButton;\n  }\n\n  return {\n    button,\n    unfollowDialogProps,\n    dialog\n  };\n}\n"]},"metadata":{},"sourceType":"module"}