{"ast":null,"code":"import _objectSpread from \"/home/abade/projects/instagram-web-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abade/projects/instagram-web-clone/src/components/Accounts/SignUpPage.js\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useForm, useField } from 'react-final-form-hooks';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { signUpAction } from '../../redux/actions/user';\nimport { ErrorText } from '../utils';\nimport { LoginWithFacebook, OR } from './utils';\nimport { Loader, useLoader } from '../utils';\nconst card = {\n  maxWidth: 348,\n  padding: '16px 40px',\n  marginBottom: 10\n};\nconst useLoginStyles = makeStyles({\n  card: _objectSpread({}, card, {\n    display: 'grid',\n    alignItems: 'center',\n    gridTemplateColumns: '3fr 2fr'\n  }),\n  signUpButton: {\n    justifySelf: 'start'\n  }\n});\n\nfunction Login() {\n  const classes = useLoginStyles();\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"right\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Have an account?\"), React.createElement(Link, {\n    to: \"/account/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    className: classes.signUpButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Log in\")));\n}\n\nconst useSignUpPageStyles = makeStyles({\n  card,\n  section: {\n    display: 'grid',\n    placeItems: 'center',\n    height: '100vh'\n  },\n  cardHeaderTitle: {\n    textAlign: 'center',\n    fontFamily: 'insta-font',\n    fontSize: 56,\n    letterSpacing: 1\n  },\n  cardHeaderSubHeader: {\n    textAlign: 'center',\n    fontWeight: 600\n  },\n  textField: {\n    marginBottom: 6\n  },\n  button: {\n    margin: '10px 0px 16px 0px'\n  }\n});\n\nfunction SignUpPage() {\n  const classes = useSignUpPageStyles();\n  const dispatch = useDispatch();\n\n  const _useLoader = useLoader(),\n        loading = _useLoader.loading,\n        setLoading = _useLoader.setLoading,\n        formError = _useLoader.formError;\n\n  const onSubmit = values => {\n    dispatch(signUpAction(values));\n    setLoading(true);\n  };\n\n  const validate = ({\n    email,\n    fullName,\n    userName,\n    password\n  }) => {\n    const errors = {};\n\n    if (!email) {\n      errors.email = 'Email is required.';\n    }\n\n    if (!fullName) {\n      errors.fullName = 'Fullname is required.';\n    }\n\n    if (!userName) {\n      errors.userName = 'Username is required.';\n    }\n\n    if (!password) {\n      errors.password = 'Password is required.';\n    } else if (password.length < 6) {\n      errors.password = 'Password should be 6 or more characters.';\n    }\n\n    return errors;\n  };\n\n  const _useForm = useForm({\n    onSubmit,\n    validate\n  }),\n        form = _useForm.form,\n        handleSubmit = _useForm.handleSubmit,\n        submitting = _useForm.submitting,\n        submitFailed = _useForm.submitFailed,\n        errors = _useForm.errors;\n\n  const email = useField('email', form);\n  const fullName = useField('fullName', form);\n  const userName = useField('userName', form);\n  const password = useField('password', form);\n  const textFieldProps = {\n    variant: 'filled',\n    fullWidth: true,\n    className: classes.textField\n  };\n\n  const emailProps = _objectSpread({}, email.input, textFieldProps, {\n    error: email.meta.error && email.meta.submitFailed,\n    label: 'Email',\n    type: 'email'\n  });\n\n  const fullNameProps = _objectSpread({}, fullName.input, textFieldProps, {\n    error: fullName.meta.error && fullName.meta.submitFailed,\n    label: 'Full Name'\n  });\n\n  const userNameProps = _objectSpread({}, userName.input, textFieldProps, {\n    error: userName.meta.error && userName.meta.submitFailed,\n    label: 'Username',\n    autoComplete: 'username'\n  });\n\n  const passwordProps = _objectSpread({}, password.input, textFieldProps, {\n    error: password.meta.error && password.meta.submitFailed,\n    label: 'Password',\n    type: 'password',\n    autoComplete: 'new-password'\n  });\n\n  const disableButton = email.meta.pristine || fullName.meta.pristine || password.meta.pristine || userName.meta.pristine || submitting || loading;\n  const buttonProps = {\n    type: 'submit',\n    disabled: disableButton,\n    variant: 'contained',\n    fullWidth: true,\n    color: 'primary',\n    className: classes.button\n  };\n  const cardHeaderProps = {\n    title: 'Instaclone',\n    subheader: 'Sign up to see photos from your friends.',\n    classes: {\n      title: classes.cardHeaderTitle,\n      subheader: classes.cardHeaderSubHeader\n    }\n  };\n  const loginWithFacebookProps = {\n    variant: 'contained',\n    color: 'primary',\n    iconColor: 'white'\n  };\n  return React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(CardHeader, Object.assign({}, cardHeaderProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })), React.createElement(LoginWithFacebook, Object.assign({}, loginWithFacebookProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), React.createElement(OR, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({}, emailProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({}, fullNameProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({}, userNameProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({}, passwordProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  })), React.createElement(Button, Object.assign({}, buttonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), loading && React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }), \"Sign Up\")), submitFailed && React.createElement(ErrorText, {\n    text: Object.values(errors)[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), formError && React.createElement(ErrorText, {\n    text: formError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  })), React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  })));\n}\n\nexport default SignUpPage;","map":{"version":3,"sources":["/home/abade/projects/instagram-web-clone/src/components/Accounts/SignUpPage.js"],"names":["React","useDispatch","Link","useForm","useField","Button","Card","CardHeader","TextField","Typography","makeStyles","signUpAction","ErrorText","LoginWithFacebook","OR","Loader","useLoader","card","maxWidth","padding","marginBottom","useLoginStyles","display","alignItems","gridTemplateColumns","signUpButton","justifySelf","Login","classes","useSignUpPageStyles","section","placeItems","height","cardHeaderTitle","textAlign","fontFamily","fontSize","letterSpacing","cardHeaderSubHeader","fontWeight","textField","button","margin","SignUpPage","dispatch","loading","setLoading","formError","onSubmit","values","validate","email","fullName","userName","password","errors","length","form","handleSubmit","submitting","submitFailed","textFieldProps","variant","fullWidth","className","emailProps","input","error","meta","label","type","fullNameProps","userNameProps","autoComplete","passwordProps","disableButton","pristine","buttonProps","disabled","color","cardHeaderProps","title","subheader","loginWithFacebookProps","iconColor","Object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useForm, useField } from 'react-final-form-hooks';\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { signUpAction } from '../../redux/actions/user';\n\nimport { ErrorText } from '../utils';\nimport { LoginWithFacebook, OR } from './utils';\nimport { Loader, useLoader } from '../utils';\n\nconst card = {\n  maxWidth: 348,\n  padding: '16px 40px',\n  marginBottom: 10\n};\n\nconst useLoginStyles = makeStyles({\n  card: {\n    ...card,\n    display: 'grid',\n    alignItems: 'center',\n    gridTemplateColumns: '3fr 2fr'\n  },\n\n  signUpButton: {\n    justifySelf: 'start'\n  }\n});\n\nfunction Login() {\n  const classes = useLoginStyles();\n\n  return (\n    <Card className={classes.card}>\n      <Typography align=\"right\" variant=\"body2\">\n        Have an account?\n      </Typography>\n      <Link to=\"/account/login\">\n        <Button color=\"primary\" className={classes.signUpButton}>\n          Log in\n        </Button>\n      </Link>\n    </Card>\n  );\n}\n\nconst useSignUpPageStyles = makeStyles({\n  card,\n\n  section: {\n    display: 'grid',\n    placeItems: 'center',\n    height: '100vh'\n  },\n\n  cardHeaderTitle: {\n    textAlign: 'center',\n    fontFamily: 'insta-font',\n    fontSize: 56,\n    letterSpacing: 1\n  },\n  cardHeaderSubHeader: {\n    textAlign: 'center',\n    fontWeight: 600\n  },\n\n  textField: {\n    marginBottom: 6\n  },\n\n  button: {\n    margin: '10px 0px 16px 0px'\n  }\n});\n\nfunction SignUpPage() {\n  const classes = useSignUpPageStyles();\n  const dispatch = useDispatch();\n  const { loading, setLoading, formError } = useLoader();\n\n  const onSubmit = values => {\n    dispatch(signUpAction(values));\n    setLoading(true);\n  };\n  const validate = ({ email, fullName, userName, password }) => {\n    const errors = {};\n    if (!email) {\n      errors.email = 'Email is required.';\n    }\n    if (!fullName) {\n      errors.fullName = 'Fullname is required.';\n    }\n    if (!userName) {\n      errors.userName = 'Username is required.';\n    }\n    if (!password) {\n      errors.password = 'Password is required.';\n    } else if (password.length < 6) {\n      errors.password = 'Password should be 6 or more characters.';\n    }\n    return errors;\n  };\n\n  const { form, handleSubmit, submitting, submitFailed, errors } = useForm({\n    onSubmit,\n    validate\n  });\n\n  const email = useField('email', form);\n  const fullName = useField('fullName', form);\n  const userName = useField('userName', form);\n  const password = useField('password', form);\n\n  const textFieldProps = {\n    variant: 'filled',\n    fullWidth: true,\n    className: classes.textField\n  };\n  const emailProps = {\n    ...email.input,\n    ...textFieldProps,\n    error: email.meta.error && email.meta.submitFailed,\n    label: 'Email',\n    type: 'email'\n  };\n  const fullNameProps = {\n    ...fullName.input,\n    ...textFieldProps,\n    error: fullName.meta.error && fullName.meta.submitFailed,\n    label: 'Full Name'\n  };\n  const userNameProps = {\n    ...userName.input,\n    ...textFieldProps,\n    error: userName.meta.error && userName.meta.submitFailed,\n    label: 'Username',\n    autoComplete: 'username'\n  };\n  const passwordProps = {\n    ...password.input,\n    ...textFieldProps,\n    error: password.meta.error && password.meta.submitFailed,\n    label: 'Password',\n    type: 'password',\n    autoComplete: 'new-password'\n  };\n  const disableButton =\n    email.meta.pristine ||\n    fullName.meta.pristine ||\n    password.meta.pristine ||\n    userName.meta.pristine ||\n    submitting ||\n    loading;\n  const buttonProps = {\n    type: 'submit',\n    disabled: disableButton,\n    variant: 'contained',\n    fullWidth: true,\n    color: 'primary',\n    className: classes.button\n  };\n  const cardHeaderProps = {\n    title: 'Instaclone',\n    subheader: 'Sign up to see photos from your friends.',\n    classes: {\n      title: classes.cardHeaderTitle,\n      subheader: classes.cardHeaderSubHeader\n    }\n  };\n  const loginWithFacebookProps = {\n    variant: 'contained',\n    color: 'primary',\n    iconColor: 'white'\n  };\n\n  return (\n    <section className={classes.section}>\n      <article>\n        <Card className={classes.card}>\n          <CardHeader {...cardHeaderProps} />\n          <LoginWithFacebook {...loginWithFacebookProps} />\n          <OR />\n          <form onSubmit={handleSubmit}>\n            <TextField {...emailProps} />\n            <TextField {...fullNameProps} />\n            <TextField {...userNameProps} />\n            <TextField {...passwordProps} />\n            <Button {...buttonProps}>\n              {loading && <Loader />}\n              Sign Up\n            </Button>\n          </form>\n          {submitFailed && <ErrorText text={Object.values(errors)[0]} />}\n          {formError && <ErrorText text={formError} />}\n        </Card>\n        <Login />\n      </article>\n    </section>\n  );\n}\n\nexport default SignUpPage;\n"]},"metadata":{},"sourceType":"module"}