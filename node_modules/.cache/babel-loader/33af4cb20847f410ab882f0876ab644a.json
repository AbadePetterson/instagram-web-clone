{"ast":null,"code":"import _objectSpread from \"/home/abade/projects/instagram-web-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/abade/projects/instagram-web-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abade/projects/instagram-web-clone/src/components/Profile/ProfilePage.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport Settings from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { logOutAction } from '../../redux/actions/user';\nimport { followAction } from '../../redux/actions/api';\nimport ProfilePostsTab from './ProfilePosts';\nimport { ChangeProfilePicDialog, ProfilePicture } from './utils';\nimport { useLoader, generateKey, Loader, UnfollowDialog } from '../utils';\nconst useOptionsItemStyles = makeStyles({\n  button: {\n    padding: '12px 8px'\n  }\n});\n\nfunction OptionsItem({\n  onClick,\n  text\n}) {\n  const classes = useOptionsItemStyles();\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    className: classes.button,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, text), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}\n\nconst useOptionsMenuStyles = makeStyles({\n  dialogScrollPaper: {\n    display: 'grid',\n    gridTemplateColumns: 'minmax(auto, 480px)'\n  },\n  dialogPaper: {\n    borderRadius: 12\n  },\n  dialogTitle: {\n    textAlign: 'center'\n  }\n});\n\nfunction OptionsMenu({\n  onClose,\n  history\n}) {\n  const classes = useOptionsMenuStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showLogOutMessage = _useState2[0],\n        toggleLogOutMessage = _useState2[1];\n\n  const dispatch = useDispatch();\n  const dialogProps = {\n    open: true,\n    classes: {\n      scrollPaper: classes.dialogScrollPaper,\n      paper: classes.dialogPaper\n    },\n    onClose: showLogOutMessage ? undefined : onClose,\n    TransitionComponent: Zoom\n  };\n\n  const handleLogOutClick = () => {\n    toggleLogOutMessage(true);\n    dispatch(logOutAction());\n  };\n\n  const handleChangePasswordClick = () => {\n    history.push('accounts/change-password');\n  };\n\n  const logOutMessage = React.createElement(DialogTitle, {\n    className: classes.dialogTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Logging Out\", React.createElement(Typography, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"You need to log back in to continue using.\"));\n  return React.createElement(Dialog, Object.assign({}, dialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), showLogOutMessage && logOutMessage, !showLogOutMessage && React.createElement(React.Fragment, null, React.createElement(OptionsItem, {\n    text: \"Change Password\",\n    onClick: handleChangePasswordClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(OptionsItem, {\n    text: \"Nametag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(OptionsItem, {\n    text: \"Authorized Apps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(OptionsItem, {\n    text: \"Notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(OptionsItem, {\n    text: \"Privacy and Security\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(OptionsItem, {\n    text: \"Log Out\",\n    onClick: handleLogOutClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(OptionsItem, {\n    text: \"Cancel\",\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })));\n}\n\nconst userNameSection = {\n  display: 'grid',\n  gridGap: 20,\n  gridAutoFlow: 'column',\n  gridTemplateColumns: 'minmax(auto, max-content) minmax(auto, 112px) 30px',\n  alignItems: 'center'\n};\nconst useProfileNameSectionStyles = makeStyles({\n  userNameSection,\n  userName: {\n    fontSize: 28,\n    fontWeight: 300\n  },\n  button: {\n    lineHeight: 'unset',\n    height: 30\n  },\n  settings: {\n    height: 30,\n    width: 30\n  },\n  settingsWrapper: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  userNameDivSmall: _objectSpread({}, userNameSection, {\n    gridTemplateColumns: 'minmax(auto, max-content) 30px',\n    gridGap: 10\n  })\n});\n\nfunction ProfileNameSection({\n  isOwner,\n  user: {\n    userName,\n    isFollowingOwner,\n    ownerIsFollowing,\n    id,\n    profileImageUrl\n  },\n  handleOptionsMenuClick\n}) {\n  const classes = useProfileNameSectionStyles();\n  const dispatch = useDispatch();\n\n  const _useRef = useRef(generateKey()),\n        key = _useRef.current;\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loadingUnfollow = _useState6[0],\n        setLoadingUnfollow = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        dialog = _useState8[0],\n        setDialog = _useState8[1];\n\n  const userProfile = useSelector(({\n    api\n  }) => api.userProfile); // TODO: A better abstraction to track loader states -> progress | succeed\n\n  useEffect(() => {\n    if (userProfile.key === key) {\n      setLoading(false);\n      setLoadingUnfollow(false);\n    }\n  }, [key, userProfile]);\n\n  const handleDialogClick = bool => () => setDialog(bool);\n\n  const handleUnfollowButtonClick = () => {\n    setDialog(false);\n    setLoadingUnfollow(true);\n    dispatch(followAction({\n      namespace: 'profile',\n      key,\n      params: id,\n      payload: {\n        follow: false\n      }\n    }));\n  };\n\n  const handleFollowButtonClick = () => {\n    setLoading(true);\n    dispatch(followAction({\n      namespace: 'profile',\n      key,\n      params: id,\n      payload: {\n        follow: true\n      }\n    }));\n  };\n\n  const editProfile = React.createElement(Link, {\n    to: \"accounts/edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Edit Profile\"));\n  const settings = React.createElement(\"div\", {\n    className: classes.settingsWrapper,\n    onClick: handleOptionsMenuClick(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Settings, {\n    className: classes.settings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }));\n  let followButton;\n\n  if (ownerIsFollowing) {\n    followButton = React.createElement(Button, {\n      disabled: loadingUnfollow,\n      onClick: handleDialogClick(true),\n      variant: \"outlined\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, loadingUnfollow && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), \"Following\");\n  } else if (isFollowingOwner) {\n    followButton = React.createElement(Button, {\n      disabled: loading,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: handleFollowButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, loading && React.createElement(Loader, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), \"Follow Back\");\n  } else {\n    followButton = React.createElement(Button, {\n      disabled: loading,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: handleFollowButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, loading && React.createElement(Loader, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), \"Follow\");\n  }\n\n  const unfollowDialogProps = {\n    userName,\n    onClose: handleDialogClick(false),\n    profileImageUrl,\n    handleUnfollowButtonClick\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: classes.userNameSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.userName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, userName), isOwner ? React.createElement(React.Fragment, null, editProfile, settings) : followButton)), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.userNameDivSmall,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.userName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, userName), isOwner && settings), isOwner ? editProfile : followButton)), dialog && React.createElement(UnfollowDialog, Object.assign({}, unfollowDialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  })));\n}\n\nconst usePostCountSectionStyles = makeStyles(theme => {\n  const followingSectionLarge = {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridGap: 40,\n    gridTemplateColumns: 'minmax(auto, max-content) minmax(auto, max-content) minmax(auto, max-content)'\n  };\n  const followingTextLarge = {\n    display: 'grid',\n    gridGap: 5,\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'minmax(auto, max-content) minmax(auto, max-content)'\n  };\n  return {\n    followingSection: {\n      [theme.breakpoints.up('sm')]: _objectSpread({}, followingSectionLarge),\n      [theme.breakpoints.down('xs')]: {\n        display: 'grid',\n        gridAutoFlow: 'column',\n        padding: '10px 0'\n      }\n    },\n    followingText: {\n      [theme.breakpoints.up('sm')]: _objectSpread({}, followingTextLarge),\n      [theme.breakpoints.down('xs')]: {\n        display: 'grid',\n        justifyItems: 'center',\n        '& p': {\n          fontSize: '0.9rem'\n        }\n      }\n    },\n    followingCount: {\n      fontWeight: 600\n    }\n  };\n});\n\nfunction PostCountSection({\n  user\n}) {\n  const classes = usePostCountSectionStyles();\n  const meta = ['posts', 'followers', 'following'];\n  const metaItems = meta.map(item => React.createElement(\"div\", {\n    key: item,\n    className: classes.followingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.followingCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, user[item]), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, item)), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, item))));\n  return React.createElement(React.Fragment, null, React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: classes.followingSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, metaItems), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  })));\n}\n\nconst useNameBioSectionStyles = makeStyles(theme => ({\n  typography: {\n    fontWeight: 600\n  },\n  section: {\n    '& p': {\n      [theme.breakpoints.down('xs')]: {\n        fontSize: '0.9rem'\n      }\n    }\n  }\n}));\n\nfunction NameBioSection({\n  user: {\n    fullName,\n    bio,\n    website\n  }\n}) {\n  const classes = useNameBioSectionStyles();\n  return React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, fullName), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, bio), React.createElement(\"a\", {\n    href: website,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, website)));\n}\n\nconst useProfilePageStyles = makeStyles({\n  cardLarge: {\n    background: 'transparent',\n    border: 'unset',\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'minmax(auto, 290px) minmax(auto, 645px)'\n  },\n  cardContentLarge: {\n    display: 'grid',\n    gridGap: 20\n  },\n  cardSmall: {\n    background: 'transparent',\n    border: 'unset'\n  },\n  sectionSmall: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    marginBottom: 16,\n    gridTemplateColumns: '77px auto',\n    gridGap: 20\n  }\n});\nexport default function ProfilePage({\n  user,\n  isOwner,\n  history,\n  match: {\n    path\n  }\n}) {\n  const classes = useProfilePageStyles();\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        showDialog = _useState10[0],\n        toggleDialog = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        showOptionsMenu = _useState12[0],\n        toggleOptionsMenu = _useState12[1];\n\n  const _useLoader = useLoader(),\n        loading = _useLoader.loading,\n        setLoading = _useLoader.setLoading;\n\n  const inputRef = useRef();\n\n  const handleOptionsMenuClick = bool => () => toggleOptionsMenu(bool);\n\n  const profilePictureLargeProps = {\n    user,\n    onImageClick: isOwner ? () => toggleDialog(true) : undefined,\n    loading,\n    setLoading,\n    inputRef,\n    isOwner\n  };\n\n  const profilePictureSmallProps = _objectSpread({\n    size: 77\n  }, profilePictureLargeProps);\n\n  const changeProfilePicDialogProps = {\n    id: user.id,\n    onClose: () => toggleDialog(false),\n    loading,\n    setLoading,\n    inputRef\n  };\n  const profileNameSectionProps = {\n    isOwner,\n    handleOptionsMenuClick,\n    user,\n    path\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardLarge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455\n    },\n    __self: this\n  }, React.createElement(ProfilePicture, Object.assign({}, profilePictureLargeProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456\n    },\n    __self: this\n  })), React.createElement(CardContent, {\n    className: classes.cardContentLarge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  }, React.createElement(ProfileNameSection, Object.assign({}, profileNameSectionProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  })), React.createElement(PostCountSection, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459\n    },\n    __self: this\n  }), React.createElement(NameBioSection, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460\n    },\n    __self: this\n  })))), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardSmall,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: classes.sectionSmall,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467\n    },\n    __self: this\n  }, React.createElement(ProfilePicture, Object.assign({}, profilePictureSmallProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  })), React.createElement(ProfileNameSection, Object.assign({}, profileNameSectionProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }))), React.createElement(NameBioSection, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471\n    },\n    __self: this\n  })), React.createElement(PostCountSection, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }))), showDialog && React.createElement(ChangeProfilePicDialog, Object.assign({}, changeProfilePicDialogProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  })), showOptionsMenu && React.createElement(OptionsMenu, {\n    history: history,\n    onClose: handleOptionsMenuClick(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480\n    },\n    __self: this\n  }), React.createElement(ProfilePostsTab, {\n    user: user,\n    isOwner: isOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/abade/projects/instagram-web-clone/src/components/Profile/ProfilePage.js"],"names":["React","useState","useRef","useEffect","useDispatch","useSelector","Link","Button","Card","CardContent","Dialog","DialogTitle","Divider","Hidden","Typography","Zoom","Settings","makeStyles","logOutAction","followAction","ProfilePostsTab","ChangeProfilePicDialog","ProfilePicture","useLoader","generateKey","Loader","UnfollowDialog","useOptionsItemStyles","button","padding","OptionsItem","onClick","text","classes","useOptionsMenuStyles","dialogScrollPaper","display","gridTemplateColumns","dialogPaper","borderRadius","dialogTitle","textAlign","OptionsMenu","onClose","history","showLogOutMessage","toggleLogOutMessage","dispatch","dialogProps","open","scrollPaper","paper","undefined","TransitionComponent","handleLogOutClick","handleChangePasswordClick","push","logOutMessage","userNameSection","gridGap","gridAutoFlow","alignItems","useProfileNameSectionStyles","userName","fontSize","fontWeight","lineHeight","height","settings","width","settingsWrapper","cursor","userNameDivSmall","ProfileNameSection","isOwner","user","isFollowingOwner","ownerIsFollowing","id","profileImageUrl","handleOptionsMenuClick","key","current","loading","setLoading","loadingUnfollow","setLoadingUnfollow","dialog","setDialog","userProfile","api","handleDialogClick","bool","handleUnfollowButtonClick","namespace","params","payload","follow","handleFollowButtonClick","editProfile","followButton","unfollowDialogProps","usePostCountSectionStyles","theme","followingSectionLarge","followingTextLarge","followingSection","breakpoints","up","down","followingText","justifyItems","followingCount","PostCountSection","meta","metaItems","map","item","useNameBioSectionStyles","typography","section","NameBioSection","fullName","bio","website","useProfilePageStyles","cardLarge","background","border","cardContentLarge","cardSmall","sectionSmall","marginBottom","ProfilePage","match","path","showDialog","toggleDialog","showOptionsMenu","toggleOptionsMenu","inputRef","profilePictureLargeProps","onImageClick","profilePictureSmallProps","size","changeProfilePicDialogProps","profileNameSectionProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport Settings from '@material-ui/icons/Settings';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { logOutAction } from '../../redux/actions/user';\nimport { followAction } from '../../redux/actions/api';\n\nimport ProfilePostsTab from './ProfilePosts';\n\nimport { ChangeProfilePicDialog, ProfilePicture } from './utils';\nimport { useLoader, generateKey, Loader, UnfollowDialog } from '../utils';\n\nconst useOptionsItemStyles = makeStyles({\n  button: {\n    padding: '12px 8px'\n  }\n});\n\nfunction OptionsItem({ onClick, text }) {\n  const classes = useOptionsItemStyles();\n\n  return (\n    <>\n      <Button className={classes.button} onClick={onClick}>\n        {text}\n      </Button>\n      <Divider />\n    </>\n  );\n}\n\nconst useOptionsMenuStyles = makeStyles({\n  dialogScrollPaper: {\n    display: 'grid',\n    gridTemplateColumns: 'minmax(auto, 480px)'\n  },\n  dialogPaper: {\n    borderRadius: 12\n  },\n  dialogTitle: {\n    textAlign: 'center'\n  }\n});\nfunction OptionsMenu({ onClose, history }) {\n  const classes = useOptionsMenuStyles();\n  const [showLogOutMessage, toggleLogOutMessage] = useState(false);\n  const dispatch = useDispatch();\n\n  const dialogProps = {\n    open: true,\n    classes: {\n      scrollPaper: classes.dialogScrollPaper,\n      paper: classes.dialogPaper\n    },\n    onClose: showLogOutMessage ? undefined : onClose,\n    TransitionComponent: Zoom\n  };\n\n  const handleLogOutClick = () => {\n    toggleLogOutMessage(true);\n    dispatch(logOutAction());\n  };\n  const handleChangePasswordClick = () => {\n    history.push('accounts/change-password');\n  };\n\n  const logOutMessage = (\n    <DialogTitle className={classes.dialogTitle}>\n      Logging Out\n      <Typography color=\"textSecondary\">\n        You need to log back in to continue using.\n      </Typography>\n    </DialogTitle>\n  );\n\n  return (\n    <Dialog {...dialogProps}>\n      {showLogOutMessage && logOutMessage}\n      {!showLogOutMessage && (\n        <>\n          <OptionsItem\n            text=\"Change Password\"\n            onClick={handleChangePasswordClick}\n          />\n          <OptionsItem text=\"Nametag\" />\n          <OptionsItem text=\"Authorized Apps\" />\n          <OptionsItem text=\"Notifications\" />\n          <OptionsItem text=\"Privacy and Security\" />\n          <OptionsItem text=\"Log Out\" onClick={handleLogOutClick} />\n          <OptionsItem text=\"Cancel\" onClick={onClose} />\n        </>\n      )}\n    </Dialog>\n  );\n}\n\nconst userNameSection = {\n  display: 'grid',\n  gridGap: 20,\n  gridAutoFlow: 'column',\n  gridTemplateColumns: 'minmax(auto, max-content) minmax(auto, 112px) 30px',\n  alignItems: 'center'\n};\nconst useProfileNameSectionStyles = makeStyles({\n  userNameSection,\n  userName: {\n    fontSize: 28,\n    fontWeight: 300\n  },\n\n  button: {\n    lineHeight: 'unset',\n    height: 30\n  },\n\n  settings: {\n    height: 30,\n    width: 30\n  },\n  settingsWrapper: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n\n  userNameDivSmall: {\n    ...userNameSection,\n    gridTemplateColumns: 'minmax(auto, max-content) 30px',\n    gridGap: 10\n  }\n});\n\nfunction ProfileNameSection({\n  isOwner,\n  user: { userName, isFollowingOwner, ownerIsFollowing, id, profileImageUrl },\n  handleOptionsMenuClick\n}) {\n  const classes = useProfileNameSectionStyles();\n  const dispatch = useDispatch();\n  const { current: key } = useRef(generateKey());\n  const [loading, setLoading] = useState(false);\n  const [loadingUnfollow, setLoadingUnfollow] = useState(false);\n  const [dialog, setDialog] = useState(false);\n  const userProfile = useSelector(({ api }) => api.userProfile);\n\n  // TODO: A better abstraction to track loader states -> progress | succeed\n  useEffect(() => {\n    if (userProfile.key === key) {\n      setLoading(false);\n      setLoadingUnfollow(false);\n    }\n  }, [key, userProfile]);\n\n  const handleDialogClick = bool => () => setDialog(bool);\n  const handleUnfollowButtonClick = () => {\n    setDialog(false);\n    setLoadingUnfollow(true);\n    dispatch(\n      followAction({\n        namespace: 'profile',\n        key,\n        params: id,\n        payload: { follow: false }\n      })\n    );\n  };\n  const handleFollowButtonClick = () => {\n    setLoading(true);\n    dispatch(\n      followAction({\n        namespace: 'profile',\n        key,\n        params: id,\n        payload: { follow: true }\n      })\n    );\n  };\n\n  const editProfile = (\n    <Link to=\"accounts/edit\">\n      <Button variant=\"outlined\" className={classes.button}>\n        Edit Profile\n      </Button>\n    </Link>\n  );\n  const settings = (\n    <div\n      className={classes.settingsWrapper}\n      onClick={handleOptionsMenuClick(true)}\n    >\n      <Settings className={classes.settings} />\n    </div>\n  );\n\n  let followButton;\n  if (ownerIsFollowing) {\n    followButton = (\n      <Button\n        disabled={loadingUnfollow}\n        onClick={handleDialogClick(true)}\n        variant=\"outlined\"\n        className={classes.button}\n      >\n        {loadingUnfollow && <Loader />}Following\n      </Button>\n    );\n  } else if (isFollowingOwner) {\n    followButton = (\n      <Button\n        disabled={loading}\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        onClick={handleFollowButtonClick}\n      >\n        {loading && <Loader color=\"blue\" />}Follow Back\n      </Button>\n    );\n  } else {\n    followButton = (\n      <Button\n        disabled={loading}\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        onClick={handleFollowButtonClick}\n      >\n        {loading && <Loader color=\"blue\" />}\n        Follow\n      </Button>\n    );\n  }\n\n  const unfollowDialogProps = {\n    userName,\n    onClose: handleDialogClick(false),\n    profileImageUrl,\n    handleUnfollowButtonClick\n  };\n\n  return (\n    <>\n      <Hidden xsDown>\n        <section className={classes.userNameSection}>\n          <Typography className={classes.userName}>{userName}</Typography>\n          {isOwner ? (\n            <>\n              {editProfile}\n              {settings}\n            </>\n          ) : (\n            followButton\n          )}\n        </section>\n      </Hidden>\n      <Hidden smUp>\n        <section>\n          <div className={classes.userNameDivSmall}>\n            <Typography className={classes.userName}>{userName}</Typography>\n            {isOwner && settings}\n          </div>\n          {isOwner ? editProfile : followButton}\n        </section>\n      </Hidden>\n      {dialog && <UnfollowDialog {...unfollowDialogProps} />}\n    </>\n  );\n}\n\nconst usePostCountSectionStyles = makeStyles(theme => {\n  const followingSectionLarge = {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridGap: 40,\n    gridTemplateColumns:\n      'minmax(auto, max-content) minmax(auto, max-content) minmax(auto, max-content)'\n  };\n  const followingTextLarge = {\n    display: 'grid',\n    gridGap: 5,\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'minmax(auto, max-content) minmax(auto, max-content)'\n  };\n\n  return {\n    followingSection: {\n      [theme.breakpoints.up('sm')]: {\n        ...followingSectionLarge\n      },\n      [theme.breakpoints.down('xs')]: {\n        display: 'grid',\n        gridAutoFlow: 'column',\n        padding: '10px 0'\n      }\n    },\n    followingText: {\n      [theme.breakpoints.up('sm')]: {\n        ...followingTextLarge\n      },\n      [theme.breakpoints.down('xs')]: {\n        display: 'grid',\n        justifyItems: 'center',\n        '& p': {\n          fontSize: '0.9rem'\n        }\n      }\n    },\n    followingCount: {\n      fontWeight: 600\n    }\n  };\n});\n\nfunction PostCountSection({ user }) {\n  const classes = usePostCountSectionStyles();\n  const meta = ['posts', 'followers', 'following'];\n  const metaItems = meta.map(item => (\n    <div key={item} className={classes.followingText}>\n      <Typography className={classes.followingCount}>{user[item]}</Typography>\n      <Hidden xsDown>\n        <Typography>{item}</Typography>\n      </Hidden>\n      <Hidden smUp>\n        <Typography color=\"textSecondary\">{item}</Typography>\n      </Hidden>\n    </div>\n  ));\n\n  return (\n    <>\n      <Hidden smUp>\n        <Divider />\n      </Hidden>\n      <section className={classes.followingSection}>{metaItems}</section>\n      <Hidden smUp>\n        <Divider />\n      </Hidden>\n    </>\n  );\n}\n\nconst useNameBioSectionStyles = makeStyles(theme => ({\n  typography: {\n    fontWeight: 600\n  },\n\n  section: {\n    '& p': {\n      [theme.breakpoints.down('xs')]: {\n        fontSize: '0.9rem'\n      }\n    }\n  }\n}));\n\nfunction NameBioSection({ user: { fullName, bio, website } }) {\n  const classes = useNameBioSectionStyles();\n\n  return (\n    <section className={classes.section}>\n      <Typography className={classes.typography}>{fullName}</Typography>\n      <Typography>{bio}</Typography>\n      <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n        <Typography color=\"secondary\" className={classes.typography}>\n          {website}\n        </Typography>\n      </a>\n    </section>\n  );\n}\n\nconst useProfilePageStyles = makeStyles({\n  cardLarge: {\n    background: 'transparent',\n    border: 'unset',\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridTemplateColumns: 'minmax(auto, 290px) minmax(auto, 645px)'\n  },\n  cardContentLarge: {\n    display: 'grid',\n    gridGap: 20\n  },\n\n  cardSmall: {\n    background: 'transparent',\n    border: 'unset'\n  },\n  sectionSmall: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    marginBottom: 16,\n    gridTemplateColumns: '77px auto',\n    gridGap: 20\n  }\n});\n\nexport default function ProfilePage({\n  user,\n  isOwner,\n  history,\n  match: { path }\n}) {\n  const classes = useProfilePageStyles();\n  const [showDialog, toggleDialog] = useState(false);\n  const [showOptionsMenu, toggleOptionsMenu] = useState(false);\n  const { loading, setLoading } = useLoader();\n  const inputRef = useRef();\n\n  const handleOptionsMenuClick = bool => () => toggleOptionsMenu(bool);\n\n  const profilePictureLargeProps = {\n    user,\n    onImageClick: isOwner ? () => toggleDialog(true) : undefined,\n    loading,\n    setLoading,\n    inputRef,\n    isOwner\n  };\n  const profilePictureSmallProps = {\n    size: 77,\n    ...profilePictureLargeProps\n  };\n  const changeProfilePicDialogProps = {\n    id: user.id,\n    onClose: () => toggleDialog(false),\n    loading,\n    setLoading,\n    inputRef\n  };\n  const profileNameSectionProps = {\n    isOwner,\n    handleOptionsMenuClick,\n    user,\n    path\n  };\n\n  return (\n    <>\n      <Hidden xsDown>\n        <Card className={classes.cardLarge}>\n          <ProfilePicture {...profilePictureLargeProps} />\n          <CardContent className={classes.cardContentLarge}>\n            <ProfileNameSection {...profileNameSectionProps} />\n            <PostCountSection user={user} />\n            <NameBioSection user={user} />\n          </CardContent>\n        </Card>\n      </Hidden>\n      <Hidden smUp>\n        <Card className={classes.cardSmall}>\n          <CardContent>\n            <section className={classes.sectionSmall}>\n              <ProfilePicture {...profilePictureSmallProps} />\n              <ProfileNameSection {...profileNameSectionProps} />\n            </section>\n            <NameBioSection user={user} />\n          </CardContent>\n          <PostCountSection user={user} />\n        </Card>\n      </Hidden>\n      {showDialog && (\n        <ChangeProfilePicDialog {...changeProfilePicDialogProps} />\n      )}\n      {showOptionsMenu && (\n        <OptionsMenu\n          history={history}\n          onClose={handleOptionsMenuClick(false)}\n        />\n      )}\n      <ProfilePostsTab user={user} isOwner={isOwner} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}